# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (c) 2012-2020 Red Hat, Inc.
#
# Authors: Jan Friesse (jfriesse@redhat.com)
#          Fabio M. Di Nitto (fdinitto@redhat.com)
#
# This software licensed under BSD license, the text of which follows:
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# - Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
# - Neither the name of the Red Hat, Inc. nor the names of its
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.


VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = $(am__EXEEXT_1)
sbin_PROGRAMS = $(am__EXEEXT_2)
@BUILD_QNETD_TRUE@am__append_1 = corosync-qnetd corosync-qnetd-tool
@BUILD_QNETD_TRUE@am__append_2 = corosync-qnetd-certutil
@BUILD_QDEVICES_TRUE@am__append_3 = corosync-qdevice corosync-qdevice-tool
@BUILD_QDEVICES_TRUE@am__append_4 = corosync-qdevice-net-certutil
@BUILD_QDEVICES_TRUE@TESTS = qnetd-cluster-list.test$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	dynar.test$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	dynar-simple-lex.test$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	dynar-getopt-lex.test$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	process-list.test$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	utils.test$(EXEEXT) log.test$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	pr-poll-loop.test$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	timer-list.test$(EXEEXT)
@BUILD_QDEVICES_TRUE@check_PROGRAMS =  \
@BUILD_QDEVICES_TRUE@	qnetd-cluster-list.test$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	dynar.test$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	dynar-simple-lex.test$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	dynar-getopt-lex.test$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	process-list.test$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	utils.test$(EXEEXT) log.test$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	pr-poll-loop.test$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	timer-list.test$(EXEEXT)
subdir = qdevices
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp $(top_srcdir)/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@BUILD_QNETD_TRUE@am__EXEEXT_1 = corosync-qnetd$(EXEEXT) \
@BUILD_QNETD_TRUE@	corosync-qnetd-tool$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" \
	"$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)"
@BUILD_QDEVICES_TRUE@am__EXEEXT_2 = corosync-qdevice$(EXEEXT) \
@BUILD_QDEVICES_TRUE@	corosync-qdevice-tool$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(sbin_PROGRAMS)
am__corosync_qdevice_SOURCES_DIST = corosync-qdevice.c qdevice-cmap.c \
	qdevice-cmap.h qdevice-instance.c qdevice-instance.h \
	node-list.c node-list.h utils.c utils.h qdevice-log.c \
	qdevice-log.h log-common.c log-common.h qdevice-votequorum.c \
	qdevice-votequorum.h qdevice-model.c qdevice-model.h \
	qdevice-model-net.c qdevice-model-net.h qdevice-net-instance.c \
	qdevice-net-instance.h dynar.c dynar.h send-buffer-list.c \
	send-buffer-list.h timer-list.c timer-list.h msg.c msg.h \
	msgio.c msgio.h nss-sock.c nss-sock.h tlv.c tlv.h \
	unix-socket.c unix-socket.h unix-socket-client.c \
	unix-socket-client.h unix-socket-client-list.c \
	unix-socket-client-list.h unix-socket-ipc.c unix-socket-ipc.h \
	qdevice-ipc.c qdevice-ipc.h pr-poll-array.c pr-poll-array.h \
	dynar-simple-lex.c dynar-simple-lex.h dynar-str.c dynar-str.h \
	qdevice-ipc-cmd.c qdevice-ipc-cmd.h qdevice-net-ipc-cmd.c \
	qdevice-net-ipc-cmd.h qdevice-net-send.c qdevice-net-send.h \
	qdevice-net-votequorum.c qdevice-net-votequorum.h \
	qdevice-net-socket.c qdevice-net-socket.h qdevice-net-nss.c \
	qdevice-net-nss.h qdevice-net-msg-received.c \
	qdevice-net-msg-received.h qdevice-net-cast-vote-timer.c \
	qdevice-net-cast-vote-timer.h qdevice-net-echo-request-timer.c \
	qdevice-net-echo-request-timer.h qdevice-net-algorithm.c \
	qdevice-net-algorithm.h qdevice-net-algo-test.c \
	qdevice-net-algo-test.h qdevice-net-algo-ffsplit.c \
	qdevice-net-algo-ffsplit.h qdevice-net-algo-2nodelms.c \
	qdevice-net-algo-2nodelms.h qdevice-net-algo-lms.c \
	qdevice-net-algo-lms.h qdevice-config.h qnet-config.h \
	qdevice-net-disconnect-reason.h qdevice-model-type.h \
	qdevice-advanced-settings.c qdevice-advanced-settings.h \
	dynar-getopt-lex.c dynar-getopt-lex.h qdevice-heuristics.h \
	qdevice-heuristics.c qdevice-heuristics-worker.h \
	qdevice-heuristics-worker.c qdevice-heuristics-io.h \
	qdevice-heuristics-io.c qdevice-heuristics-worker-instance.h \
	qdevice-heuristics-worker-log.h \
	qdevice-heuristics-worker-log.c qdevice-heuristics-log.h \
	qdevice-heuristics-log.c qdevice-heuristics-instance.h \
	qdevice-heuristics-instance.c qdevice-heuristics-mode.h \
	qdevice-heuristics-mode.c qdevice-heuristics-exec-list.c \
	qdevice-heuristics-exec-list.h qdevice-heuristics-cmd.c \
	qdevice-heuristics-cmd.h qdevice-heuristics-worker-cmd.c \
	qdevice-heuristics-worker-cmd.h qdevice-heuristics-cmd-str.h \
	qdevice-heuristics-exec-result.c \
	qdevice-heuristics-exec-result.h process-list.h process-list.c \
	qdevice-net-heuristics.c qdevice-net-heuristics.h \
	qdevice-heuristics-result-notifier.c \
	qdevice-heuristics-result-notifier.h log.c log.h \
	pr-poll-loop.c pr-poll-loop.h qdevice-pr-poll-loop-cb.c \
	qdevice-pr-poll-loop-cb.h qdevice-pr-poll-loop.c \
	qdevice-pr-poll-loop.h
@BUILD_QDEVICES_TRUE@am_corosync_qdevice_OBJECTS = corosync_qdevice-corosync-qdevice.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-cmap.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-instance.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-node-list.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-utils.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-log.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-log-common.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-votequorum.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-model.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-model-net.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-instance.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-dynar.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-send-buffer-list.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-timer-list.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-msg.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-msgio.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-nss-sock.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-tlv.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-unix-socket.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-unix-socket-client.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-unix-socket-client-list.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-unix-socket-ipc.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-ipc.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-pr-poll-array.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-dynar-simple-lex.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-dynar-str.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-ipc-cmd.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-ipc-cmd.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-send.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-votequorum.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-socket.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-nss.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-msg-received.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-cast-vote-timer.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-echo-request-timer.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-algorithm.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-algo-test.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-algo-ffsplit.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-algo-2nodelms.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-algo-lms.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-advanced-settings.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-dynar-getopt-lex.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-heuristics.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-heuristics-worker.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-heuristics-io.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-heuristics-worker-log.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-heuristics-log.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-heuristics-instance.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-heuristics-mode.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-heuristics-exec-list.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-heuristics-cmd.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-heuristics-worker-cmd.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-heuristics-exec-result.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-process-list.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-net-heuristics.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-heuristics-result-notifier.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-log.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-pr-poll-loop.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-pr-poll-loop-cb.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	corosync_qdevice-qdevice-pr-poll-loop.$(OBJEXT)
corosync_qdevice_OBJECTS = $(am_corosync_qdevice_OBJECTS)
am__DEPENDENCIES_1 =
@BUILD_QDEVICES_TRUE@corosync_qdevice_DEPENDENCIES =  \
@BUILD_QDEVICES_TRUE@	$(am__DEPENDENCIES_1) \
@BUILD_QDEVICES_TRUE@	$(am__DEPENDENCIES_1) \
@BUILD_QDEVICES_TRUE@	$(am__DEPENDENCIES_1) \
@BUILD_QDEVICES_TRUE@	$(am__DEPENDENCIES_1) \
@BUILD_QDEVICES_TRUE@	$(am__DEPENDENCIES_1)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
corosync_qdevice_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(corosync_qdevice_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__corosync_qdevice_tool_SOURCES_DIST = corosync-qdevice-tool.c \
	unix-socket.c unix-socket.h dynar.c dynar.h dynar-str.c \
	dynar-str.h utils.c utils.h
@BUILD_QDEVICES_TRUE@am_corosync_qdevice_tool_OBJECTS =  \
@BUILD_QDEVICES_TRUE@	corosync-qdevice-tool.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	unix-socket.$(OBJEXT) dynar.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	dynar-str.$(OBJEXT) utils.$(OBJEXT)
corosync_qdevice_tool_OBJECTS = $(am_corosync_qdevice_tool_OBJECTS)
corosync_qdevice_tool_LDADD = $(LDADD)
am__corosync_qnetd_SOURCES_DIST = corosync-qnetd.c dynar.c dynar.h \
	msg.c msg.h msgio.c msgio.h nss-sock.c nss-sock.h \
	qnetd-client.c qnetd-client.h qnetd-client-list.c \
	qnetd-client-list.h log.c log.h pr-poll-array.c \
	pr-poll-array.h timer-list.c timer-list.h tlv.c tlv.h \
	log-common.c log-common.h send-buffer-list.c \
	send-buffer-list.h node-list.c node-list.h qnetd-algo-test.c \
	qnetd-algo-test.h qnetd-algorithm.c qnetd-algorithm.h \
	qnetd-algo-utils.c qnetd-algo-utils.h qnetd-algo-ffsplit.c \
	qnetd-algo-ffsplit.h qnetd-cluster.c qnetd-cluster.h \
	qnetd-cluster-list.c qnetd-cluster-list.h qnetd-client-send.c \
	qnetd-client-send.h qnetd-algo-2nodelms.c \
	qnetd-algo-2nodelms.h qnetd-algo-lms.c qnetd-algo-lms.h \
	utils.c utils.h qnetd-instance.c qnetd-instance.h \
	qnetd-client-net.c qnetd-client-net.h \
	qnetd-client-msg-received.c qnetd-client-msg-received.h \
	qnetd-log-debug.c qnetd-log-debug.h qnetd-client-algo-timer.c \
	qnetd-client-algo-timer.h qnetd-client-dpd-timer.c \
	qnetd-client-dpd-timer.h qnetd-ipc.c qnetd-ipc.h \
	unix-socket-ipc.c unix-socket-ipc.h dynar-simple-lex.c \
	dynar-simple-lex.h dynar-str.c dynar-str.h \
	unix-socket-client.c unix-socket-client.h \
	unix-socket-client-list.c unix-socket-client-list.h \
	unix-socket.c unix-socket.h qnetd-ipc-cmd.c qnetd-ipc-cmd.h \
	qnet-config.h dynar-getopt-lex.c dynar-getopt-lex.h \
	qnetd-advanced-settings.c qnetd-advanced-settings.h \
	pr-poll-loop.c pr-poll-loop.h
@BUILD_QNETD_TRUE@am_corosync_qnetd_OBJECTS =  \
@BUILD_QNETD_TRUE@	corosync_qnetd-corosync-qnetd.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-dynar.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-msg.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-msgio.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-nss-sock.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-client.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-client-list.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-log.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-pr-poll-array.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-timer-list.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-tlv.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-log-common.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-send-buffer-list.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-node-list.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-algo-test.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-algorithm.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-algo-utils.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-algo-ffsplit.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-cluster.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-cluster-list.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-client-send.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-algo-2nodelms.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-algo-lms.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-utils.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-instance.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-client-net.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-client-msg-received.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-log-debug.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-client-algo-timer.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-client-dpd-timer.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-ipc.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-unix-socket-ipc.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-dynar-simple-lex.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-dynar-str.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-unix-socket-client.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-unix-socket-client-list.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-unix-socket.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-ipc-cmd.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-dynar-getopt-lex.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-qnetd-advanced-settings.$(OBJEXT) \
@BUILD_QNETD_TRUE@	corosync_qnetd-pr-poll-loop.$(OBJEXT)
corosync_qnetd_OBJECTS = $(am_corosync_qnetd_OBJECTS)
@BUILD_QNETD_TRUE@corosync_qnetd_DEPENDENCIES = $(am__DEPENDENCIES_1) \
@BUILD_QNETD_TRUE@	$(am__DEPENDENCIES_1)
corosync_qnetd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(corosync_qnetd_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
am__corosync_qnetd_tool_SOURCES_DIST = corosync-qnetd-tool.c \
	unix-socket.c unix-socket.h dynar.c dynar.h dynar-str.c \
	dynar-str.h utils.c utils.h
@BUILD_QNETD_TRUE@am_corosync_qnetd_tool_OBJECTS =  \
@BUILD_QNETD_TRUE@	corosync-qnetd-tool.$(OBJEXT) \
@BUILD_QNETD_TRUE@	unix-socket.$(OBJEXT) dynar.$(OBJEXT) \
@BUILD_QNETD_TRUE@	dynar-str.$(OBJEXT) utils.$(OBJEXT)
corosync_qnetd_tool_OBJECTS = $(am_corosync_qnetd_tool_OBJECTS)
corosync_qnetd_tool_LDADD = $(LDADD)
am__dynar_getopt_lex_test_SOURCES_DIST = test-dynar-getopt-lex.c \
	dynar.c dynar.h dynar-str.c dynar-str.h dynar-getopt-lex.c \
	dynar-getopt-lex.h
@BUILD_QDEVICES_TRUE@am_dynar_getopt_lex_test_OBJECTS =  \
@BUILD_QDEVICES_TRUE@	test-dynar-getopt-lex.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	dynar.$(OBJEXT) dynar-str.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	dynar-getopt-lex.$(OBJEXT)
dynar_getopt_lex_test_OBJECTS = $(am_dynar_getopt_lex_test_OBJECTS)
dynar_getopt_lex_test_LDADD = $(LDADD)
am__dynar_simple_lex_test_SOURCES_DIST = test-dynar-simple-lex.c \
	dynar.c dynar.h dynar-str.c dynar-str.h dynar-simple-lex.c \
	dynar-simple-lex.h
@BUILD_QDEVICES_TRUE@am_dynar_simple_lex_test_OBJECTS =  \
@BUILD_QDEVICES_TRUE@	test-dynar-simple-lex.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	dynar.$(OBJEXT) dynar-str.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	dynar-simple-lex.$(OBJEXT)
dynar_simple_lex_test_OBJECTS = $(am_dynar_simple_lex_test_OBJECTS)
dynar_simple_lex_test_LDADD = $(LDADD)
am__dynar_test_SOURCES_DIST = test-dynar.c dynar.c dynar.h dynar-str.c \
	dynar-str.h
@BUILD_QDEVICES_TRUE@am_dynar_test_OBJECTS = test-dynar.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	dynar.$(OBJEXT) dynar-str.$(OBJEXT)
dynar_test_OBJECTS = $(am_dynar_test_OBJECTS)
dynar_test_LDADD = $(LDADD)
am__log_test_SOURCES_DIST = test-log.c log.c log.h
@BUILD_QDEVICES_TRUE@am_log_test_OBJECTS = test-log.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	log.$(OBJEXT)
log_test_OBJECTS = $(am_log_test_OBJECTS)
log_test_LDADD = $(LDADD)
am__pr_poll_loop_test_SOURCES_DIST = test-pr-poll-loop.c \
	pr-poll-loop.c pr-poll-loop.h pr-poll-array.c pr-poll-array.h \
	timer-list.c timer-list.h
@BUILD_QDEVICES_TRUE@am_pr_poll_loop_test_OBJECTS = pr_poll_loop_test-test-pr-poll-loop.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	pr_poll_loop_test-pr-poll-loop.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	pr_poll_loop_test-pr-poll-array.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	pr_poll_loop_test-timer-list.$(OBJEXT)
pr_poll_loop_test_OBJECTS = $(am_pr_poll_loop_test_OBJECTS)
@BUILD_QDEVICES_TRUE@pr_poll_loop_test_DEPENDENCIES =  \
@BUILD_QDEVICES_TRUE@	$(am__DEPENDENCIES_1)
pr_poll_loop_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(pr_poll_loop_test_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__process_list_test_SOURCES_DIST = test-process-list.c dynar.c \
	dynar.h dynar-str.c dynar-str.h dynar-simple-lex.c \
	dynar-simple-lex.h process-list.c process-list.h
@BUILD_QDEVICES_TRUE@am_process_list_test_OBJECTS =  \
@BUILD_QDEVICES_TRUE@	test-process-list.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	dynar.$(OBJEXT) dynar-str.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	dynar-simple-lex.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	process-list.$(OBJEXT)
process_list_test_OBJECTS = $(am_process_list_test_OBJECTS)
process_list_test_LDADD = $(LDADD)
am__qnetd_cluster_list_test_SOURCES_DIST = test-qnetd-cluster-list.c \
	qnetd-cluster-list.c qnetd-cluster-list.h qnetd-cluster.c \
	qnetd-cluster.h qnetd-client-list.c qnetd-client-list.h \
	qnetd-client.c qnetd-client.h dynar.c dynar.h node-list.c \
	node-list.h send-buffer-list.c send-buffer-list.h
@BUILD_QDEVICES_TRUE@am_qnetd_cluster_list_test_OBJECTS = qnetd_cluster_list_test-test-qnetd-cluster-list.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	qnetd_cluster_list_test-qnetd-cluster-list.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	qnetd_cluster_list_test-qnetd-cluster.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	qnetd_cluster_list_test-qnetd-client-list.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	qnetd_cluster_list_test-qnetd-client.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	qnetd_cluster_list_test-dynar.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	qnetd_cluster_list_test-node-list.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	qnetd_cluster_list_test-send-buffer-list.$(OBJEXT)
qnetd_cluster_list_test_OBJECTS =  \
	$(am_qnetd_cluster_list_test_OBJECTS)
@BUILD_QDEVICES_TRUE@qnetd_cluster_list_test_DEPENDENCIES =  \
@BUILD_QDEVICES_TRUE@	$(am__DEPENDENCIES_1)
qnetd_cluster_list_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__timer_list_test_SOURCES_DIST = test-timer-list.c timer-list.c \
	timer-list.h
@BUILD_QDEVICES_TRUE@am_timer_list_test_OBJECTS = timer_list_test-test-timer-list.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	timer_list_test-timer-list.$(OBJEXT)
timer_list_test_OBJECTS = $(am_timer_list_test_OBJECTS)
@BUILD_QDEVICES_TRUE@timer_list_test_DEPENDENCIES =  \
@BUILD_QDEVICES_TRUE@	$(am__DEPENDENCIES_1)
timer_list_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(timer_list_test_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__utils_test_SOURCES_DIST = test-utils.c utils.c utils.h
@BUILD_QDEVICES_TRUE@am_utils_test_OBJECTS = test-utils.$(OBJEXT) \
@BUILD_QDEVICES_TRUE@	utils.$(OBJEXT)
utils_test_OBJECTS = $(am_utils_test_OBJECTS)
utils_test_LDADD = $(LDADD)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
SCRIPTS = $(bin_SCRIPTS) $(sbin_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(corosync_qdevice_SOURCES) $(corosync_qdevice_tool_SOURCES) \
	$(corosync_qnetd_SOURCES) $(corosync_qnetd_tool_SOURCES) \
	$(dynar_getopt_lex_test_SOURCES) \
	$(dynar_simple_lex_test_SOURCES) $(dynar_test_SOURCES) \
	$(log_test_SOURCES) $(pr_poll_loop_test_SOURCES) \
	$(process_list_test_SOURCES) \
	$(qnetd_cluster_list_test_SOURCES) $(timer_list_test_SOURCES) \
	$(utils_test_SOURCES)
DIST_SOURCES = $(am__corosync_qdevice_SOURCES_DIST) \
	$(am__corosync_qdevice_tool_SOURCES_DIST) \
	$(am__corosync_qnetd_SOURCES_DIST) \
	$(am__corosync_qnetd_tool_SOURCES_DIST) \
	$(am__dynar_getopt_lex_test_SOURCES_DIST) \
	$(am__dynar_simple_lex_test_SOURCES_DIST) \
	$(am__dynar_test_SOURCES_DIST) $(am__log_test_SOURCES_DIST) \
	$(am__pr_poll_loop_test_SOURCES_DIST) \
	$(am__process_list_test_SOURCES_DIST) \
	$(am__qnetd_cluster_list_test_SOURCES_DIST) \
	$(am__timer_list_test_SOURCES_DIST) \
	$(am__utils_test_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BASHPATH = @BASHPATH@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COROSYSCONFDIR = @COROSYSCONFDIR@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
GROFF = @GROFF@
INITCONFIGDIR = @INITCONFIGDIR@
INITDDIR = @INITDDIR@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LOGDIR = @LOGDIR@
LOGROTATEDIR = @LOGROTATEDIR@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
NSS_LDFLAGS = @NSS_LDFLAGS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SOMAJOR = @SOMAJOR@
SOMICRO = @SOMICRO@
SOMINOR = @SOMINOR@
SONAME = @SONAME@
STRIP = @STRIP@
SYSTEMDDIR = @SYSTEMDDIR@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
cmap_CFLAGS = @cmap_CFLAGS@
cmap_LIBS = @cmap_LIBS@
corosync_common_CFLAGS = @corosync_common_CFLAGS@
corosync_common_LIBS = @corosync_common_LIBS@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
libsystemd_CFLAGS = @libsystemd_CFLAGS@
libsystemd_LIBS = @libsystemd_LIBS@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
nss_CFLAGS = @nss_CFLAGS@
nss_LIBS = @nss_LIBS@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
votequorum_CFLAGS = @votequorum_CFLAGS@
votequorum_LIBS = @votequorum_LIBS@
MAINTAINERCLEANFILES = Makefile.in
SUBDIRS = 
bin_SCRIPTS = $(am__append_2)
sbin_SCRIPTS = $(am__append_4)
EXTRA_DIST = corosync-qnetd-certutil.sh corosync-qdevice-net-certutil.sh
@BUILD_QNETD_TRUE@corosync_qnetd_SOURCES = corosync-qnetd.c \
@BUILD_QNETD_TRUE@                          dynar.c dynar.h msg.c msg.h msgio.c msgio.h \
@BUILD_QNETD_TRUE@                          nss-sock.c nss-sock.h qnetd-client.c qnetd-client.h \
@BUILD_QNETD_TRUE@                          qnetd-client-list.c qnetd-client-list.h log.c log.h \
@BUILD_QNETD_TRUE@                          pr-poll-array.c pr-poll-array.h timer-list.c timer-list.h tlv.c tlv.h \
@BUILD_QNETD_TRUE@                          log-common.c log-common.h \
@BUILD_QNETD_TRUE@                          send-buffer-list.c send-buffer-list.h node-list.c node-list.h \
@BUILD_QNETD_TRUE@                          qnetd-algo-test.c qnetd-algo-test.h qnetd-algorithm.c qnetd-algorithm.h \
@BUILD_QNETD_TRUE@                          qnetd-algo-utils.c qnetd-algo-utils.h \
@BUILD_QNETD_TRUE@                          qnetd-algo-ffsplit.c qnetd-algo-ffsplit.h \
@BUILD_QNETD_TRUE@                          qnetd-cluster.c qnetd-cluster.h \
@BUILD_QNETD_TRUE@                          qnetd-cluster-list.c qnetd-cluster-list.h \
@BUILD_QNETD_TRUE@                          qnetd-client-send.c qnetd-client-send.h \
@BUILD_QNETD_TRUE@                          qnetd-algo-2nodelms.c qnetd-algo-2nodelms.h qnetd-algo-lms.c qnetd-algo-lms.h \
@BUILD_QNETD_TRUE@                          utils.c utils.h qnetd-instance.c qnetd-instance.h \
@BUILD_QNETD_TRUE@                          qnetd-client-net.c qnetd-client-net.h \
@BUILD_QNETD_TRUE@                          qnetd-client-msg-received.c qnetd-client-msg-received.h \
@BUILD_QNETD_TRUE@                          qnetd-log-debug.c qnetd-log-debug.h \
@BUILD_QNETD_TRUE@                          qnetd-client-algo-timer.c qnetd-client-algo-timer.h \
@BUILD_QNETD_TRUE@                          qnetd-client-dpd-timer.c qnetd-client-dpd-timer.h \
@BUILD_QNETD_TRUE@                          qnetd-ipc.c qnetd-ipc.h unix-socket-ipc.c unix-socket-ipc.h \
@BUILD_QNETD_TRUE@                          dynar-simple-lex.c dynar-simple-lex.h dynar-str.c dynar-str.h \
@BUILD_QNETD_TRUE@                          unix-socket-client.c unix-socket-client.h \
@BUILD_QNETD_TRUE@                          unix-socket-client-list.c unix-socket-client-list.h \
@BUILD_QNETD_TRUE@                          unix-socket.c unix-socket.h qnetd-ipc-cmd.c qnetd-ipc-cmd.h \
@BUILD_QNETD_TRUE@                          qnet-config.h dynar-getopt-lex.c \
@BUILD_QNETD_TRUE@                          dynar-getopt-lex.h qnetd-advanced-settings.c qnetd-advanced-settings.h \
@BUILD_QNETD_TRUE@                          pr-poll-loop.c pr-poll-loop.h

@BUILD_QNETD_TRUE@corosync_qnetd_tool_SOURCES = corosync-qnetd-tool.c unix-socket.c unix-socket.h dynar.c dynar.h \
@BUILD_QNETD_TRUE@                              dynar-str.c dynar-str.h utils.c utils.h

@BUILD_QNETD_TRUE@corosync_qnetd_CFLAGS = $(nss_CFLAGS) $(libsystemd_CFLAGS)
@BUILD_QNETD_TRUE@corosync_qnetd_LDADD = $(nss_LIBS)   $(libsystemd_LIBS)
@BUILD_QDEVICES_TRUE@corosync_qdevice_SOURCES = corosync-qdevice.c \
@BUILD_QDEVICES_TRUE@                           qdevice-cmap.c qdevice-cmap.h \
@BUILD_QDEVICES_TRUE@                           qdevice-instance.c qdevice-instance.h node-list.c node-list.h \
@BUILD_QDEVICES_TRUE@                           utils.c utils.h qdevice-log.c qdevice-log.h \
@BUILD_QDEVICES_TRUE@                           log-common.c log-common.h \
@BUILD_QDEVICES_TRUE@                           qdevice-votequorum.c qdevice-votequorum.h \
@BUILD_QDEVICES_TRUE@                           qdevice-model.c qdevice-model.h qdevice-model-net.c qdevice-model-net.h \
@BUILD_QDEVICES_TRUE@                           qdevice-net-instance.c qdevice-net-instance.h dynar.c dynar.h \
@BUILD_QDEVICES_TRUE@                           send-buffer-list.c send-buffer-list.h timer-list.c timer-list.h \
@BUILD_QDEVICES_TRUE@                           msg.c msg.h msgio.c msgio.h nss-sock.c nss-sock.h tlv.c tlv.h \
@BUILD_QDEVICES_TRUE@                           unix-socket.c unix-socket.h unix-socket-client.c unix-socket-client.h \
@BUILD_QDEVICES_TRUE@                           unix-socket-client-list.c unix-socket-client-list.h \
@BUILD_QDEVICES_TRUE@                           unix-socket-ipc.c unix-socket-ipc.h qdevice-ipc.c qdevice-ipc.h \
@BUILD_QDEVICES_TRUE@                           pr-poll-array.c pr-poll-array.h dynar-simple-lex.c dynar-simple-lex.h \
@BUILD_QDEVICES_TRUE@                           dynar-str.c dynar-str.h qdevice-ipc-cmd.c qdevice-ipc-cmd.h \
@BUILD_QDEVICES_TRUE@                           qdevice-net-ipc-cmd.c qdevice-net-ipc-cmd.h \
@BUILD_QDEVICES_TRUE@                           qdevice-net-send.c qdevice-net-send.h \
@BUILD_QDEVICES_TRUE@                           qdevice-net-votequorum.c qdevice-net-votequorum.h \
@BUILD_QDEVICES_TRUE@                           qdevice-net-socket.c qdevice-net-socket.h \
@BUILD_QDEVICES_TRUE@                           qdevice-net-nss.c qdevice-net-nss.h \
@BUILD_QDEVICES_TRUE@                           qdevice-net-msg-received.c qdevice-net-msg-received.h \
@BUILD_QDEVICES_TRUE@                           qdevice-net-cast-vote-timer.c qdevice-net-cast-vote-timer.h \
@BUILD_QDEVICES_TRUE@                           qdevice-net-echo-request-timer.c qdevice-net-echo-request-timer.h \
@BUILD_QDEVICES_TRUE@                           qdevice-net-algorithm.c qdevice-net-algorithm.h \
@BUILD_QDEVICES_TRUE@                           qdevice-net-algo-test.c qdevice-net-algo-test.h \
@BUILD_QDEVICES_TRUE@                           qdevice-net-algo-ffsplit.c qdevice-net-algo-ffsplit.h \
@BUILD_QDEVICES_TRUE@                           qdevice-net-algo-2nodelms.c qdevice-net-algo-2nodelms.h \
@BUILD_QDEVICES_TRUE@                           qdevice-net-algo-lms.c qdevice-net-algo-lms.h \
@BUILD_QDEVICES_TRUE@                           qdevice-config.h qnet-config.h qdevice-net-disconnect-reason.h \
@BUILD_QDEVICES_TRUE@                           qdevice-model-type.h qdevice-advanced-settings.c \
@BUILD_QDEVICES_TRUE@                           qdevice-advanced-settings.h dynar-getopt-lex.c dynar-getopt-lex.h \
@BUILD_QDEVICES_TRUE@                           qdevice-heuristics.h qdevice-heuristics.c \
@BUILD_QDEVICES_TRUE@                           qdevice-heuristics-worker.h qdevice-heuristics-worker.c \
@BUILD_QDEVICES_TRUE@                           qdevice-heuristics-io.h qdevice-heuristics-io.c \
@BUILD_QDEVICES_TRUE@                           qdevice-heuristics-worker-instance.h \
@BUILD_QDEVICES_TRUE@                           qdevice-heuristics-worker-log.h qdevice-heuristics-worker-log.c \
@BUILD_QDEVICES_TRUE@                           qdevice-heuristics-log.h qdevice-heuristics-log.c \
@BUILD_QDEVICES_TRUE@                           qdevice-heuristics-instance.h qdevice-heuristics-instance.c \
@BUILD_QDEVICES_TRUE@                           qdevice-heuristics-mode.h qdevice-heuristics-mode.c \
@BUILD_QDEVICES_TRUE@                           qdevice-heuristics-exec-list.c qdevice-heuristics-exec-list.h \
@BUILD_QDEVICES_TRUE@                           qdevice-heuristics-cmd.c qdevice-heuristics-cmd.h \
@BUILD_QDEVICES_TRUE@                           qdevice-heuristics-worker-cmd.c qdevice-heuristics-worker-cmd.h \
@BUILD_QDEVICES_TRUE@                           qdevice-heuristics-cmd-str.h \
@BUILD_QDEVICES_TRUE@                           qdevice-heuristics-exec-result.c qdevice-heuristics-exec-result.h \
@BUILD_QDEVICES_TRUE@                           process-list.h process-list.c \
@BUILD_QDEVICES_TRUE@                           qdevice-net-heuristics.c qdevice-net-heuristics.h \
@BUILD_QDEVICES_TRUE@                           qdevice-heuristics-result-notifier.c qdevice-heuristics-result-notifier.h \
@BUILD_QDEVICES_TRUE@                           log.c log.h pr-poll-loop.c pr-poll-loop.h \
@BUILD_QDEVICES_TRUE@                           qdevice-pr-poll-loop-cb.c qdevice-pr-poll-loop-cb.h \
@BUILD_QDEVICES_TRUE@                           qdevice-pr-poll-loop.c qdevice-pr-poll-loop.h

@BUILD_QDEVICES_TRUE@corosync_qdevice_tool_SOURCES = corosync-qdevice-tool.c unix-socket.c unix-socket.h dynar.c dynar.h \
@BUILD_QDEVICES_TRUE@                                dynar-str.c dynar-str.h utils.c utils.h

@BUILD_QDEVICES_TRUE@corosync_qdevice_CFLAGS = $(nss_CFLAGS) $(libsystemd_CFLAGS) $(cmap_CFLAGS) \
@BUILD_QDEVICES_TRUE@                          $(votequorum_CFLAGS) $(corosync_common_CFLAGS)

@BUILD_QDEVICES_TRUE@corosync_qdevice_LDADD = $(nss_LIBS) $(libsystemd_LIBS) $(cmap_LIBS) \
@BUILD_QDEVICES_TRUE@                          $(votequorum_LIBS) $(corosync_common_LIBS)

@BUILD_QDEVICES_TRUE@qnetd_cluster_list_test_SOURCES = test-qnetd-cluster-list.c qnetd-cluster-list.c qnetd-cluster-list.h \
@BUILD_QDEVICES_TRUE@                                  qnetd-cluster.c qnetd-cluster.h \
@BUILD_QDEVICES_TRUE@                                  qnetd-client-list.c qnetd-client-list.h \
@BUILD_QDEVICES_TRUE@                                  qnetd-client.c qnetd-client.h dynar.c dynar.h \
@BUILD_QDEVICES_TRUE@                                  node-list.c node-list.h send-buffer-list.c send-buffer-list.h

@BUILD_QDEVICES_TRUE@qnetd_cluster_list_test_CFLAGS = $(nss_CFLAGS)
@BUILD_QDEVICES_TRUE@qnetd_cluster_list_test_LDADD = $(nss_LIBS)
@BUILD_QDEVICES_TRUE@dynar_test_SOURCES = test-dynar.c dynar.c dynar.h dynar-str.c dynar-str.h
@BUILD_QDEVICES_TRUE@dynar_simple_lex_test_SOURCES = test-dynar-simple-lex.c dynar.c dynar.h dynar-str.c dynar-str.h \
@BUILD_QDEVICES_TRUE@                                  dynar-simple-lex.c dynar-simple-lex.h

@BUILD_QDEVICES_TRUE@dynar_getopt_lex_test_SOURCES = test-dynar-getopt-lex.c dynar.c dynar.h dynar-str.c dynar-str.h \
@BUILD_QDEVICES_TRUE@                                  dynar-getopt-lex.c dynar-getopt-lex.h

@BUILD_QDEVICES_TRUE@process_list_test_SOURCES = test-process-list.c dynar.c dynar.h dynar-str.c dynar-str.h \
@BUILD_QDEVICES_TRUE@                                  dynar-simple-lex.c dynar-simple-lex.h process-list.c process-list.h

@BUILD_QDEVICES_TRUE@utils_test_SOURCES = test-utils.c utils.c utils.h
@BUILD_QDEVICES_TRUE@log_test_SOURCES = test-log.c log.c log.h
@BUILD_QDEVICES_TRUE@pr_poll_loop_test_SOURCES = test-pr-poll-loop.c pr-poll-loop.c pr-poll-loop.h \
@BUILD_QDEVICES_TRUE@                                  pr-poll-array.c pr-poll-array.h timer-list.c timer-list.h

@BUILD_QDEVICES_TRUE@pr_poll_loop_test_CFLAGS = $(nss_CFLAGS)
@BUILD_QDEVICES_TRUE@pr_poll_loop_test_LDADD = $(nss_LIBS)
@BUILD_QDEVICES_TRUE@timer_list_test_SOURCES = test-timer-list.c timer-list.c timer-list.h
@BUILD_QDEVICES_TRUE@timer_list_test_CFLAGS = $(nss_CFLAGS)
@BUILD_QDEVICES_TRUE@timer_list_test_LDADD = $(nss_LIBS)
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign qdevices/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign qdevices/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	@list='$(sbin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

corosync-qdevice$(EXEEXT): $(corosync_qdevice_OBJECTS) $(corosync_qdevice_DEPENDENCIES) $(EXTRA_corosync_qdevice_DEPENDENCIES) 
	@rm -f corosync-qdevice$(EXEEXT)
	$(AM_V_CCLD)$(corosync_qdevice_LINK) $(corosync_qdevice_OBJECTS) $(corosync_qdevice_LDADD) $(LIBS)

corosync-qdevice-tool$(EXEEXT): $(corosync_qdevice_tool_OBJECTS) $(corosync_qdevice_tool_DEPENDENCIES) $(EXTRA_corosync_qdevice_tool_DEPENDENCIES) 
	@rm -f corosync-qdevice-tool$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(corosync_qdevice_tool_OBJECTS) $(corosync_qdevice_tool_LDADD) $(LIBS)

corosync-qnetd$(EXEEXT): $(corosync_qnetd_OBJECTS) $(corosync_qnetd_DEPENDENCIES) $(EXTRA_corosync_qnetd_DEPENDENCIES) 
	@rm -f corosync-qnetd$(EXEEXT)
	$(AM_V_CCLD)$(corosync_qnetd_LINK) $(corosync_qnetd_OBJECTS) $(corosync_qnetd_LDADD) $(LIBS)

corosync-qnetd-tool$(EXEEXT): $(corosync_qnetd_tool_OBJECTS) $(corosync_qnetd_tool_DEPENDENCIES) $(EXTRA_corosync_qnetd_tool_DEPENDENCIES) 
	@rm -f corosync-qnetd-tool$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(corosync_qnetd_tool_OBJECTS) $(corosync_qnetd_tool_LDADD) $(LIBS)

dynar-getopt-lex.test$(EXEEXT): $(dynar_getopt_lex_test_OBJECTS) $(dynar_getopt_lex_test_DEPENDENCIES) $(EXTRA_dynar_getopt_lex_test_DEPENDENCIES) 
	@rm -f dynar-getopt-lex.test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dynar_getopt_lex_test_OBJECTS) $(dynar_getopt_lex_test_LDADD) $(LIBS)

dynar-simple-lex.test$(EXEEXT): $(dynar_simple_lex_test_OBJECTS) $(dynar_simple_lex_test_DEPENDENCIES) $(EXTRA_dynar_simple_lex_test_DEPENDENCIES) 
	@rm -f dynar-simple-lex.test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dynar_simple_lex_test_OBJECTS) $(dynar_simple_lex_test_LDADD) $(LIBS)

dynar.test$(EXEEXT): $(dynar_test_OBJECTS) $(dynar_test_DEPENDENCIES) $(EXTRA_dynar_test_DEPENDENCIES) 
	@rm -f dynar.test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(dynar_test_OBJECTS) $(dynar_test_LDADD) $(LIBS)

log.test$(EXEEXT): $(log_test_OBJECTS) $(log_test_DEPENDENCIES) $(EXTRA_log_test_DEPENDENCIES) 
	@rm -f log.test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(log_test_OBJECTS) $(log_test_LDADD) $(LIBS)

pr-poll-loop.test$(EXEEXT): $(pr_poll_loop_test_OBJECTS) $(pr_poll_loop_test_DEPENDENCIES) $(EXTRA_pr_poll_loop_test_DEPENDENCIES) 
	@rm -f pr-poll-loop.test$(EXEEXT)
	$(AM_V_CCLD)$(pr_poll_loop_test_LINK) $(pr_poll_loop_test_OBJECTS) $(pr_poll_loop_test_LDADD) $(LIBS)

process-list.test$(EXEEXT): $(process_list_test_OBJECTS) $(process_list_test_DEPENDENCIES) $(EXTRA_process_list_test_DEPENDENCIES) 
	@rm -f process-list.test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(process_list_test_OBJECTS) $(process_list_test_LDADD) $(LIBS)

qnetd-cluster-list.test$(EXEEXT): $(qnetd_cluster_list_test_OBJECTS) $(qnetd_cluster_list_test_DEPENDENCIES) $(EXTRA_qnetd_cluster_list_test_DEPENDENCIES) 
	@rm -f qnetd-cluster-list.test$(EXEEXT)
	$(AM_V_CCLD)$(qnetd_cluster_list_test_LINK) $(qnetd_cluster_list_test_OBJECTS) $(qnetd_cluster_list_test_LDADD) $(LIBS)

timer-list.test$(EXEEXT): $(timer_list_test_OBJECTS) $(timer_list_test_DEPENDENCIES) $(EXTRA_timer_list_test_DEPENDENCIES) 
	@rm -f timer-list.test$(EXEEXT)
	$(AM_V_CCLD)$(timer_list_test_LINK) $(timer_list_test_OBJECTS) $(timer_list_test_LDADD) $(LIBS)

utils.test$(EXEEXT): $(utils_test_OBJECTS) $(utils_test_DEPENDENCIES) $(EXTRA_utils_test_DEPENDENCIES) 
	@rm -f utils.test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(utils_test_OBJECTS) $(utils_test_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)
install-sbinSCRIPTS: $(sbin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_SCRIPTS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-sbinSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_SCRIPTS)'; test -n "$(sbindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(sbindir)'; $(am__uninstall_files_from_dir)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync-qdevice-tool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync-qnetd-tool.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-corosync-qdevice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-dynar-getopt-lex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-dynar-simple-lex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-dynar-str.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-dynar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-log-common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-msg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-msgio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-node-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-nss-sock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-pr-poll-array.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-pr-poll-loop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-process-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-advanced-settings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-cmap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-heuristics-cmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-heuristics-exec-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-heuristics-exec-result.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-heuristics-instance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-heuristics-io.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-heuristics-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-heuristics-mode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-heuristics-result-notifier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker-cmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-heuristics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-instance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-ipc-cmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-ipc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-model-net.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-algo-2nodelms.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-algo-ffsplit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-algo-lms.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-algo-test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-algorithm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-cast-vote-timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-echo-request-timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-heuristics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-instance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-ipc-cmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-msg-received.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-nss.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-send.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-socket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-net-votequorum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-pr-poll-loop-cb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-pr-poll-loop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-qdevice-votequorum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-send-buffer-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-timer-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-tlv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-unix-socket-client-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-unix-socket-client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-unix-socket-ipc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-unix-socket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qdevice-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-corosync-qnetd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-dynar-getopt-lex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-dynar-simple-lex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-dynar-str.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-dynar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-log-common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-msg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-msgio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-node-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-nss-sock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-pr-poll-array.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-pr-poll-loop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-advanced-settings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-algo-2nodelms.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-algo-ffsplit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-algo-lms.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-algo-test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-algo-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-algorithm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-client-algo-timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-client-dpd-timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-client-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-client-msg-received.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-client-net.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-client-send.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-cluster-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-cluster.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-instance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-ipc-cmd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-ipc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-qnetd-log-debug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-send-buffer-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-timer-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-tlv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-unix-socket-client-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-unix-socket-client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-unix-socket-ipc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-unix-socket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/corosync_qnetd-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynar-getopt-lex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynar-simple-lex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynar-str.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dynar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pr_poll_loop_test-pr-poll-array.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pr_poll_loop_test-pr-poll-loop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pr_poll_loop_test-test-pr-poll-loop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pr_poll_loop_test-timer-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/process-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qnetd_cluster_list_test-dynar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qnetd_cluster_list_test-node-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qnetd_cluster_list_test-qnetd-client-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qnetd_cluster_list_test-qnetd-client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qnetd_cluster_list_test-qnetd-cluster-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qnetd_cluster_list_test-qnetd-cluster.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qnetd_cluster_list_test-send-buffer-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/qnetd_cluster_list_test-test-qnetd-cluster-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-dynar-getopt-lex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-dynar-simple-lex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-dynar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-process-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timer_list_test-test-timer-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timer_list_test-timer-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unix-socket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utils.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

corosync_qdevice-corosync-qdevice.o: corosync-qdevice.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-corosync-qdevice.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-corosync-qdevice.Tpo -c -o corosync_qdevice-corosync-qdevice.o `test -f 'corosync-qdevice.c' || echo '$(srcdir)/'`corosync-qdevice.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-corosync-qdevice.Tpo $(DEPDIR)/corosync_qdevice-corosync-qdevice.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='corosync-qdevice.c' object='corosync_qdevice-corosync-qdevice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-corosync-qdevice.o `test -f 'corosync-qdevice.c' || echo '$(srcdir)/'`corosync-qdevice.c

corosync_qdevice-corosync-qdevice.obj: corosync-qdevice.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-corosync-qdevice.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-corosync-qdevice.Tpo -c -o corosync_qdevice-corosync-qdevice.obj `if test -f 'corosync-qdevice.c'; then $(CYGPATH_W) 'corosync-qdevice.c'; else $(CYGPATH_W) '$(srcdir)/corosync-qdevice.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-corosync-qdevice.Tpo $(DEPDIR)/corosync_qdevice-corosync-qdevice.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='corosync-qdevice.c' object='corosync_qdevice-corosync-qdevice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-corosync-qdevice.obj `if test -f 'corosync-qdevice.c'; then $(CYGPATH_W) 'corosync-qdevice.c'; else $(CYGPATH_W) '$(srcdir)/corosync-qdevice.c'; fi`

corosync_qdevice-qdevice-cmap.o: qdevice-cmap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-cmap.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-cmap.Tpo -c -o corosync_qdevice-qdevice-cmap.o `test -f 'qdevice-cmap.c' || echo '$(srcdir)/'`qdevice-cmap.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-cmap.Tpo $(DEPDIR)/corosync_qdevice-qdevice-cmap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-cmap.c' object='corosync_qdevice-qdevice-cmap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-cmap.o `test -f 'qdevice-cmap.c' || echo '$(srcdir)/'`qdevice-cmap.c

corosync_qdevice-qdevice-cmap.obj: qdevice-cmap.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-cmap.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-cmap.Tpo -c -o corosync_qdevice-qdevice-cmap.obj `if test -f 'qdevice-cmap.c'; then $(CYGPATH_W) 'qdevice-cmap.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-cmap.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-cmap.Tpo $(DEPDIR)/corosync_qdevice-qdevice-cmap.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-cmap.c' object='corosync_qdevice-qdevice-cmap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-cmap.obj `if test -f 'qdevice-cmap.c'; then $(CYGPATH_W) 'qdevice-cmap.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-cmap.c'; fi`

corosync_qdevice-qdevice-instance.o: qdevice-instance.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-instance.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-instance.Tpo -c -o corosync_qdevice-qdevice-instance.o `test -f 'qdevice-instance.c' || echo '$(srcdir)/'`qdevice-instance.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-instance.Tpo $(DEPDIR)/corosync_qdevice-qdevice-instance.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-instance.c' object='corosync_qdevice-qdevice-instance.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-instance.o `test -f 'qdevice-instance.c' || echo '$(srcdir)/'`qdevice-instance.c

corosync_qdevice-qdevice-instance.obj: qdevice-instance.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-instance.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-instance.Tpo -c -o corosync_qdevice-qdevice-instance.obj `if test -f 'qdevice-instance.c'; then $(CYGPATH_W) 'qdevice-instance.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-instance.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-instance.Tpo $(DEPDIR)/corosync_qdevice-qdevice-instance.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-instance.c' object='corosync_qdevice-qdevice-instance.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-instance.obj `if test -f 'qdevice-instance.c'; then $(CYGPATH_W) 'qdevice-instance.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-instance.c'; fi`

corosync_qdevice-node-list.o: node-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-node-list.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-node-list.Tpo -c -o corosync_qdevice-node-list.o `test -f 'node-list.c' || echo '$(srcdir)/'`node-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-node-list.Tpo $(DEPDIR)/corosync_qdevice-node-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='node-list.c' object='corosync_qdevice-node-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-node-list.o `test -f 'node-list.c' || echo '$(srcdir)/'`node-list.c

corosync_qdevice-node-list.obj: node-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-node-list.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-node-list.Tpo -c -o corosync_qdevice-node-list.obj `if test -f 'node-list.c'; then $(CYGPATH_W) 'node-list.c'; else $(CYGPATH_W) '$(srcdir)/node-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-node-list.Tpo $(DEPDIR)/corosync_qdevice-node-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='node-list.c' object='corosync_qdevice-node-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-node-list.obj `if test -f 'node-list.c'; then $(CYGPATH_W) 'node-list.c'; else $(CYGPATH_W) '$(srcdir)/node-list.c'; fi`

corosync_qdevice-utils.o: utils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-utils.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-utils.Tpo -c -o corosync_qdevice-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-utils.Tpo $(DEPDIR)/corosync_qdevice-utils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='utils.c' object='corosync_qdevice-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

corosync_qdevice-utils.obj: utils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-utils.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-utils.Tpo -c -o corosync_qdevice-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-utils.Tpo $(DEPDIR)/corosync_qdevice-utils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='utils.c' object='corosync_qdevice-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`

corosync_qdevice-qdevice-log.o: qdevice-log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-log.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-log.Tpo -c -o corosync_qdevice-qdevice-log.o `test -f 'qdevice-log.c' || echo '$(srcdir)/'`qdevice-log.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-log.Tpo $(DEPDIR)/corosync_qdevice-qdevice-log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-log.c' object='corosync_qdevice-qdevice-log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-log.o `test -f 'qdevice-log.c' || echo '$(srcdir)/'`qdevice-log.c

corosync_qdevice-qdevice-log.obj: qdevice-log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-log.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-log.Tpo -c -o corosync_qdevice-qdevice-log.obj `if test -f 'qdevice-log.c'; then $(CYGPATH_W) 'qdevice-log.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-log.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-log.Tpo $(DEPDIR)/corosync_qdevice-qdevice-log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-log.c' object='corosync_qdevice-qdevice-log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-log.obj `if test -f 'qdevice-log.c'; then $(CYGPATH_W) 'qdevice-log.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-log.c'; fi`

corosync_qdevice-log-common.o: log-common.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-log-common.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-log-common.Tpo -c -o corosync_qdevice-log-common.o `test -f 'log-common.c' || echo '$(srcdir)/'`log-common.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-log-common.Tpo $(DEPDIR)/corosync_qdevice-log-common.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='log-common.c' object='corosync_qdevice-log-common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-log-common.o `test -f 'log-common.c' || echo '$(srcdir)/'`log-common.c

corosync_qdevice-log-common.obj: log-common.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-log-common.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-log-common.Tpo -c -o corosync_qdevice-log-common.obj `if test -f 'log-common.c'; then $(CYGPATH_W) 'log-common.c'; else $(CYGPATH_W) '$(srcdir)/log-common.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-log-common.Tpo $(DEPDIR)/corosync_qdevice-log-common.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='log-common.c' object='corosync_qdevice-log-common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-log-common.obj `if test -f 'log-common.c'; then $(CYGPATH_W) 'log-common.c'; else $(CYGPATH_W) '$(srcdir)/log-common.c'; fi`

corosync_qdevice-qdevice-votequorum.o: qdevice-votequorum.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-votequorum.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-votequorum.Tpo -c -o corosync_qdevice-qdevice-votequorum.o `test -f 'qdevice-votequorum.c' || echo '$(srcdir)/'`qdevice-votequorum.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-votequorum.Tpo $(DEPDIR)/corosync_qdevice-qdevice-votequorum.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-votequorum.c' object='corosync_qdevice-qdevice-votequorum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-votequorum.o `test -f 'qdevice-votequorum.c' || echo '$(srcdir)/'`qdevice-votequorum.c

corosync_qdevice-qdevice-votequorum.obj: qdevice-votequorum.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-votequorum.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-votequorum.Tpo -c -o corosync_qdevice-qdevice-votequorum.obj `if test -f 'qdevice-votequorum.c'; then $(CYGPATH_W) 'qdevice-votequorum.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-votequorum.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-votequorum.Tpo $(DEPDIR)/corosync_qdevice-qdevice-votequorum.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-votequorum.c' object='corosync_qdevice-qdevice-votequorum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-votequorum.obj `if test -f 'qdevice-votequorum.c'; then $(CYGPATH_W) 'qdevice-votequorum.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-votequorum.c'; fi`

corosync_qdevice-qdevice-model.o: qdevice-model.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-model.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-model.Tpo -c -o corosync_qdevice-qdevice-model.o `test -f 'qdevice-model.c' || echo '$(srcdir)/'`qdevice-model.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-model.Tpo $(DEPDIR)/corosync_qdevice-qdevice-model.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-model.c' object='corosync_qdevice-qdevice-model.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-model.o `test -f 'qdevice-model.c' || echo '$(srcdir)/'`qdevice-model.c

corosync_qdevice-qdevice-model.obj: qdevice-model.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-model.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-model.Tpo -c -o corosync_qdevice-qdevice-model.obj `if test -f 'qdevice-model.c'; then $(CYGPATH_W) 'qdevice-model.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-model.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-model.Tpo $(DEPDIR)/corosync_qdevice-qdevice-model.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-model.c' object='corosync_qdevice-qdevice-model.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-model.obj `if test -f 'qdevice-model.c'; then $(CYGPATH_W) 'qdevice-model.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-model.c'; fi`

corosync_qdevice-qdevice-model-net.o: qdevice-model-net.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-model-net.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-model-net.Tpo -c -o corosync_qdevice-qdevice-model-net.o `test -f 'qdevice-model-net.c' || echo '$(srcdir)/'`qdevice-model-net.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-model-net.Tpo $(DEPDIR)/corosync_qdevice-qdevice-model-net.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-model-net.c' object='corosync_qdevice-qdevice-model-net.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-model-net.o `test -f 'qdevice-model-net.c' || echo '$(srcdir)/'`qdevice-model-net.c

corosync_qdevice-qdevice-model-net.obj: qdevice-model-net.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-model-net.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-model-net.Tpo -c -o corosync_qdevice-qdevice-model-net.obj `if test -f 'qdevice-model-net.c'; then $(CYGPATH_W) 'qdevice-model-net.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-model-net.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-model-net.Tpo $(DEPDIR)/corosync_qdevice-qdevice-model-net.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-model-net.c' object='corosync_qdevice-qdevice-model-net.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-model-net.obj `if test -f 'qdevice-model-net.c'; then $(CYGPATH_W) 'qdevice-model-net.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-model-net.c'; fi`

corosync_qdevice-qdevice-net-instance.o: qdevice-net-instance.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-instance.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-instance.Tpo -c -o corosync_qdevice-qdevice-net-instance.o `test -f 'qdevice-net-instance.c' || echo '$(srcdir)/'`qdevice-net-instance.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-instance.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-instance.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-instance.c' object='corosync_qdevice-qdevice-net-instance.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-instance.o `test -f 'qdevice-net-instance.c' || echo '$(srcdir)/'`qdevice-net-instance.c

corosync_qdevice-qdevice-net-instance.obj: qdevice-net-instance.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-instance.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-instance.Tpo -c -o corosync_qdevice-qdevice-net-instance.obj `if test -f 'qdevice-net-instance.c'; then $(CYGPATH_W) 'qdevice-net-instance.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-instance.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-instance.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-instance.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-instance.c' object='corosync_qdevice-qdevice-net-instance.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-instance.obj `if test -f 'qdevice-net-instance.c'; then $(CYGPATH_W) 'qdevice-net-instance.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-instance.c'; fi`

corosync_qdevice-dynar.o: dynar.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-dynar.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-dynar.Tpo -c -o corosync_qdevice-dynar.o `test -f 'dynar.c' || echo '$(srcdir)/'`dynar.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-dynar.Tpo $(DEPDIR)/corosync_qdevice-dynar.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar.c' object='corosync_qdevice-dynar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-dynar.o `test -f 'dynar.c' || echo '$(srcdir)/'`dynar.c

corosync_qdevice-dynar.obj: dynar.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-dynar.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-dynar.Tpo -c -o corosync_qdevice-dynar.obj `if test -f 'dynar.c'; then $(CYGPATH_W) 'dynar.c'; else $(CYGPATH_W) '$(srcdir)/dynar.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-dynar.Tpo $(DEPDIR)/corosync_qdevice-dynar.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar.c' object='corosync_qdevice-dynar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-dynar.obj `if test -f 'dynar.c'; then $(CYGPATH_W) 'dynar.c'; else $(CYGPATH_W) '$(srcdir)/dynar.c'; fi`

corosync_qdevice-send-buffer-list.o: send-buffer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-send-buffer-list.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-send-buffer-list.Tpo -c -o corosync_qdevice-send-buffer-list.o `test -f 'send-buffer-list.c' || echo '$(srcdir)/'`send-buffer-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-send-buffer-list.Tpo $(DEPDIR)/corosync_qdevice-send-buffer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='send-buffer-list.c' object='corosync_qdevice-send-buffer-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-send-buffer-list.o `test -f 'send-buffer-list.c' || echo '$(srcdir)/'`send-buffer-list.c

corosync_qdevice-send-buffer-list.obj: send-buffer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-send-buffer-list.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-send-buffer-list.Tpo -c -o corosync_qdevice-send-buffer-list.obj `if test -f 'send-buffer-list.c'; then $(CYGPATH_W) 'send-buffer-list.c'; else $(CYGPATH_W) '$(srcdir)/send-buffer-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-send-buffer-list.Tpo $(DEPDIR)/corosync_qdevice-send-buffer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='send-buffer-list.c' object='corosync_qdevice-send-buffer-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-send-buffer-list.obj `if test -f 'send-buffer-list.c'; then $(CYGPATH_W) 'send-buffer-list.c'; else $(CYGPATH_W) '$(srcdir)/send-buffer-list.c'; fi`

corosync_qdevice-timer-list.o: timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-timer-list.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-timer-list.Tpo -c -o corosync_qdevice-timer-list.o `test -f 'timer-list.c' || echo '$(srcdir)/'`timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-timer-list.Tpo $(DEPDIR)/corosync_qdevice-timer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='timer-list.c' object='corosync_qdevice-timer-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-timer-list.o `test -f 'timer-list.c' || echo '$(srcdir)/'`timer-list.c

corosync_qdevice-timer-list.obj: timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-timer-list.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-timer-list.Tpo -c -o corosync_qdevice-timer-list.obj `if test -f 'timer-list.c'; then $(CYGPATH_W) 'timer-list.c'; else $(CYGPATH_W) '$(srcdir)/timer-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-timer-list.Tpo $(DEPDIR)/corosync_qdevice-timer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='timer-list.c' object='corosync_qdevice-timer-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-timer-list.obj `if test -f 'timer-list.c'; then $(CYGPATH_W) 'timer-list.c'; else $(CYGPATH_W) '$(srcdir)/timer-list.c'; fi`

corosync_qdevice-msg.o: msg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-msg.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-msg.Tpo -c -o corosync_qdevice-msg.o `test -f 'msg.c' || echo '$(srcdir)/'`msg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-msg.Tpo $(DEPDIR)/corosync_qdevice-msg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='msg.c' object='corosync_qdevice-msg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-msg.o `test -f 'msg.c' || echo '$(srcdir)/'`msg.c

corosync_qdevice-msg.obj: msg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-msg.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-msg.Tpo -c -o corosync_qdevice-msg.obj `if test -f 'msg.c'; then $(CYGPATH_W) 'msg.c'; else $(CYGPATH_W) '$(srcdir)/msg.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-msg.Tpo $(DEPDIR)/corosync_qdevice-msg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='msg.c' object='corosync_qdevice-msg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-msg.obj `if test -f 'msg.c'; then $(CYGPATH_W) 'msg.c'; else $(CYGPATH_W) '$(srcdir)/msg.c'; fi`

corosync_qdevice-msgio.o: msgio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-msgio.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-msgio.Tpo -c -o corosync_qdevice-msgio.o `test -f 'msgio.c' || echo '$(srcdir)/'`msgio.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-msgio.Tpo $(DEPDIR)/corosync_qdevice-msgio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='msgio.c' object='corosync_qdevice-msgio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-msgio.o `test -f 'msgio.c' || echo '$(srcdir)/'`msgio.c

corosync_qdevice-msgio.obj: msgio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-msgio.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-msgio.Tpo -c -o corosync_qdevice-msgio.obj `if test -f 'msgio.c'; then $(CYGPATH_W) 'msgio.c'; else $(CYGPATH_W) '$(srcdir)/msgio.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-msgio.Tpo $(DEPDIR)/corosync_qdevice-msgio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='msgio.c' object='corosync_qdevice-msgio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-msgio.obj `if test -f 'msgio.c'; then $(CYGPATH_W) 'msgio.c'; else $(CYGPATH_W) '$(srcdir)/msgio.c'; fi`

corosync_qdevice-nss-sock.o: nss-sock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-nss-sock.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-nss-sock.Tpo -c -o corosync_qdevice-nss-sock.o `test -f 'nss-sock.c' || echo '$(srcdir)/'`nss-sock.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-nss-sock.Tpo $(DEPDIR)/corosync_qdevice-nss-sock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='nss-sock.c' object='corosync_qdevice-nss-sock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-nss-sock.o `test -f 'nss-sock.c' || echo '$(srcdir)/'`nss-sock.c

corosync_qdevice-nss-sock.obj: nss-sock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-nss-sock.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-nss-sock.Tpo -c -o corosync_qdevice-nss-sock.obj `if test -f 'nss-sock.c'; then $(CYGPATH_W) 'nss-sock.c'; else $(CYGPATH_W) '$(srcdir)/nss-sock.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-nss-sock.Tpo $(DEPDIR)/corosync_qdevice-nss-sock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='nss-sock.c' object='corosync_qdevice-nss-sock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-nss-sock.obj `if test -f 'nss-sock.c'; then $(CYGPATH_W) 'nss-sock.c'; else $(CYGPATH_W) '$(srcdir)/nss-sock.c'; fi`

corosync_qdevice-tlv.o: tlv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-tlv.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-tlv.Tpo -c -o corosync_qdevice-tlv.o `test -f 'tlv.c' || echo '$(srcdir)/'`tlv.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-tlv.Tpo $(DEPDIR)/corosync_qdevice-tlv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='tlv.c' object='corosync_qdevice-tlv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-tlv.o `test -f 'tlv.c' || echo '$(srcdir)/'`tlv.c

corosync_qdevice-tlv.obj: tlv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-tlv.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-tlv.Tpo -c -o corosync_qdevice-tlv.obj `if test -f 'tlv.c'; then $(CYGPATH_W) 'tlv.c'; else $(CYGPATH_W) '$(srcdir)/tlv.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-tlv.Tpo $(DEPDIR)/corosync_qdevice-tlv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='tlv.c' object='corosync_qdevice-tlv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-tlv.obj `if test -f 'tlv.c'; then $(CYGPATH_W) 'tlv.c'; else $(CYGPATH_W) '$(srcdir)/tlv.c'; fi`

corosync_qdevice-unix-socket.o: unix-socket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-unix-socket.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-unix-socket.Tpo -c -o corosync_qdevice-unix-socket.o `test -f 'unix-socket.c' || echo '$(srcdir)/'`unix-socket.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-unix-socket.Tpo $(DEPDIR)/corosync_qdevice-unix-socket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket.c' object='corosync_qdevice-unix-socket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-unix-socket.o `test -f 'unix-socket.c' || echo '$(srcdir)/'`unix-socket.c

corosync_qdevice-unix-socket.obj: unix-socket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-unix-socket.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-unix-socket.Tpo -c -o corosync_qdevice-unix-socket.obj `if test -f 'unix-socket.c'; then $(CYGPATH_W) 'unix-socket.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-unix-socket.Tpo $(DEPDIR)/corosync_qdevice-unix-socket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket.c' object='corosync_qdevice-unix-socket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-unix-socket.obj `if test -f 'unix-socket.c'; then $(CYGPATH_W) 'unix-socket.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket.c'; fi`

corosync_qdevice-unix-socket-client.o: unix-socket-client.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-unix-socket-client.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-unix-socket-client.Tpo -c -o corosync_qdevice-unix-socket-client.o `test -f 'unix-socket-client.c' || echo '$(srcdir)/'`unix-socket-client.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-unix-socket-client.Tpo $(DEPDIR)/corosync_qdevice-unix-socket-client.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket-client.c' object='corosync_qdevice-unix-socket-client.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-unix-socket-client.o `test -f 'unix-socket-client.c' || echo '$(srcdir)/'`unix-socket-client.c

corosync_qdevice-unix-socket-client.obj: unix-socket-client.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-unix-socket-client.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-unix-socket-client.Tpo -c -o corosync_qdevice-unix-socket-client.obj `if test -f 'unix-socket-client.c'; then $(CYGPATH_W) 'unix-socket-client.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket-client.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-unix-socket-client.Tpo $(DEPDIR)/corosync_qdevice-unix-socket-client.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket-client.c' object='corosync_qdevice-unix-socket-client.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-unix-socket-client.obj `if test -f 'unix-socket-client.c'; then $(CYGPATH_W) 'unix-socket-client.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket-client.c'; fi`

corosync_qdevice-unix-socket-client-list.o: unix-socket-client-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-unix-socket-client-list.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-unix-socket-client-list.Tpo -c -o corosync_qdevice-unix-socket-client-list.o `test -f 'unix-socket-client-list.c' || echo '$(srcdir)/'`unix-socket-client-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-unix-socket-client-list.Tpo $(DEPDIR)/corosync_qdevice-unix-socket-client-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket-client-list.c' object='corosync_qdevice-unix-socket-client-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-unix-socket-client-list.o `test -f 'unix-socket-client-list.c' || echo '$(srcdir)/'`unix-socket-client-list.c

corosync_qdevice-unix-socket-client-list.obj: unix-socket-client-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-unix-socket-client-list.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-unix-socket-client-list.Tpo -c -o corosync_qdevice-unix-socket-client-list.obj `if test -f 'unix-socket-client-list.c'; then $(CYGPATH_W) 'unix-socket-client-list.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket-client-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-unix-socket-client-list.Tpo $(DEPDIR)/corosync_qdevice-unix-socket-client-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket-client-list.c' object='corosync_qdevice-unix-socket-client-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-unix-socket-client-list.obj `if test -f 'unix-socket-client-list.c'; then $(CYGPATH_W) 'unix-socket-client-list.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket-client-list.c'; fi`

corosync_qdevice-unix-socket-ipc.o: unix-socket-ipc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-unix-socket-ipc.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-unix-socket-ipc.Tpo -c -o corosync_qdevice-unix-socket-ipc.o `test -f 'unix-socket-ipc.c' || echo '$(srcdir)/'`unix-socket-ipc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-unix-socket-ipc.Tpo $(DEPDIR)/corosync_qdevice-unix-socket-ipc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket-ipc.c' object='corosync_qdevice-unix-socket-ipc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-unix-socket-ipc.o `test -f 'unix-socket-ipc.c' || echo '$(srcdir)/'`unix-socket-ipc.c

corosync_qdevice-unix-socket-ipc.obj: unix-socket-ipc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-unix-socket-ipc.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-unix-socket-ipc.Tpo -c -o corosync_qdevice-unix-socket-ipc.obj `if test -f 'unix-socket-ipc.c'; then $(CYGPATH_W) 'unix-socket-ipc.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket-ipc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-unix-socket-ipc.Tpo $(DEPDIR)/corosync_qdevice-unix-socket-ipc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket-ipc.c' object='corosync_qdevice-unix-socket-ipc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-unix-socket-ipc.obj `if test -f 'unix-socket-ipc.c'; then $(CYGPATH_W) 'unix-socket-ipc.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket-ipc.c'; fi`

corosync_qdevice-qdevice-ipc.o: qdevice-ipc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-ipc.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-ipc.Tpo -c -o corosync_qdevice-qdevice-ipc.o `test -f 'qdevice-ipc.c' || echo '$(srcdir)/'`qdevice-ipc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-ipc.Tpo $(DEPDIR)/corosync_qdevice-qdevice-ipc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-ipc.c' object='corosync_qdevice-qdevice-ipc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-ipc.o `test -f 'qdevice-ipc.c' || echo '$(srcdir)/'`qdevice-ipc.c

corosync_qdevice-qdevice-ipc.obj: qdevice-ipc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-ipc.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-ipc.Tpo -c -o corosync_qdevice-qdevice-ipc.obj `if test -f 'qdevice-ipc.c'; then $(CYGPATH_W) 'qdevice-ipc.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-ipc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-ipc.Tpo $(DEPDIR)/corosync_qdevice-qdevice-ipc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-ipc.c' object='corosync_qdevice-qdevice-ipc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-ipc.obj `if test -f 'qdevice-ipc.c'; then $(CYGPATH_W) 'qdevice-ipc.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-ipc.c'; fi`

corosync_qdevice-pr-poll-array.o: pr-poll-array.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-pr-poll-array.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-pr-poll-array.Tpo -c -o corosync_qdevice-pr-poll-array.o `test -f 'pr-poll-array.c' || echo '$(srcdir)/'`pr-poll-array.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-pr-poll-array.Tpo $(DEPDIR)/corosync_qdevice-pr-poll-array.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pr-poll-array.c' object='corosync_qdevice-pr-poll-array.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-pr-poll-array.o `test -f 'pr-poll-array.c' || echo '$(srcdir)/'`pr-poll-array.c

corosync_qdevice-pr-poll-array.obj: pr-poll-array.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-pr-poll-array.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-pr-poll-array.Tpo -c -o corosync_qdevice-pr-poll-array.obj `if test -f 'pr-poll-array.c'; then $(CYGPATH_W) 'pr-poll-array.c'; else $(CYGPATH_W) '$(srcdir)/pr-poll-array.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-pr-poll-array.Tpo $(DEPDIR)/corosync_qdevice-pr-poll-array.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pr-poll-array.c' object='corosync_qdevice-pr-poll-array.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-pr-poll-array.obj `if test -f 'pr-poll-array.c'; then $(CYGPATH_W) 'pr-poll-array.c'; else $(CYGPATH_W) '$(srcdir)/pr-poll-array.c'; fi`

corosync_qdevice-dynar-simple-lex.o: dynar-simple-lex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-dynar-simple-lex.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-dynar-simple-lex.Tpo -c -o corosync_qdevice-dynar-simple-lex.o `test -f 'dynar-simple-lex.c' || echo '$(srcdir)/'`dynar-simple-lex.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-dynar-simple-lex.Tpo $(DEPDIR)/corosync_qdevice-dynar-simple-lex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar-simple-lex.c' object='corosync_qdevice-dynar-simple-lex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-dynar-simple-lex.o `test -f 'dynar-simple-lex.c' || echo '$(srcdir)/'`dynar-simple-lex.c

corosync_qdevice-dynar-simple-lex.obj: dynar-simple-lex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-dynar-simple-lex.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-dynar-simple-lex.Tpo -c -o corosync_qdevice-dynar-simple-lex.obj `if test -f 'dynar-simple-lex.c'; then $(CYGPATH_W) 'dynar-simple-lex.c'; else $(CYGPATH_W) '$(srcdir)/dynar-simple-lex.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-dynar-simple-lex.Tpo $(DEPDIR)/corosync_qdevice-dynar-simple-lex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar-simple-lex.c' object='corosync_qdevice-dynar-simple-lex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-dynar-simple-lex.obj `if test -f 'dynar-simple-lex.c'; then $(CYGPATH_W) 'dynar-simple-lex.c'; else $(CYGPATH_W) '$(srcdir)/dynar-simple-lex.c'; fi`

corosync_qdevice-dynar-str.o: dynar-str.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-dynar-str.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-dynar-str.Tpo -c -o corosync_qdevice-dynar-str.o `test -f 'dynar-str.c' || echo '$(srcdir)/'`dynar-str.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-dynar-str.Tpo $(DEPDIR)/corosync_qdevice-dynar-str.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar-str.c' object='corosync_qdevice-dynar-str.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-dynar-str.o `test -f 'dynar-str.c' || echo '$(srcdir)/'`dynar-str.c

corosync_qdevice-dynar-str.obj: dynar-str.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-dynar-str.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-dynar-str.Tpo -c -o corosync_qdevice-dynar-str.obj `if test -f 'dynar-str.c'; then $(CYGPATH_W) 'dynar-str.c'; else $(CYGPATH_W) '$(srcdir)/dynar-str.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-dynar-str.Tpo $(DEPDIR)/corosync_qdevice-dynar-str.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar-str.c' object='corosync_qdevice-dynar-str.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-dynar-str.obj `if test -f 'dynar-str.c'; then $(CYGPATH_W) 'dynar-str.c'; else $(CYGPATH_W) '$(srcdir)/dynar-str.c'; fi`

corosync_qdevice-qdevice-ipc-cmd.o: qdevice-ipc-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-ipc-cmd.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-ipc-cmd.Tpo -c -o corosync_qdevice-qdevice-ipc-cmd.o `test -f 'qdevice-ipc-cmd.c' || echo '$(srcdir)/'`qdevice-ipc-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-ipc-cmd.Tpo $(DEPDIR)/corosync_qdevice-qdevice-ipc-cmd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-ipc-cmd.c' object='corosync_qdevice-qdevice-ipc-cmd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-ipc-cmd.o `test -f 'qdevice-ipc-cmd.c' || echo '$(srcdir)/'`qdevice-ipc-cmd.c

corosync_qdevice-qdevice-ipc-cmd.obj: qdevice-ipc-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-ipc-cmd.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-ipc-cmd.Tpo -c -o corosync_qdevice-qdevice-ipc-cmd.obj `if test -f 'qdevice-ipc-cmd.c'; then $(CYGPATH_W) 'qdevice-ipc-cmd.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-ipc-cmd.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-ipc-cmd.Tpo $(DEPDIR)/corosync_qdevice-qdevice-ipc-cmd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-ipc-cmd.c' object='corosync_qdevice-qdevice-ipc-cmd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-ipc-cmd.obj `if test -f 'qdevice-ipc-cmd.c'; then $(CYGPATH_W) 'qdevice-ipc-cmd.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-ipc-cmd.c'; fi`

corosync_qdevice-qdevice-net-ipc-cmd.o: qdevice-net-ipc-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-ipc-cmd.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-ipc-cmd.Tpo -c -o corosync_qdevice-qdevice-net-ipc-cmd.o `test -f 'qdevice-net-ipc-cmd.c' || echo '$(srcdir)/'`qdevice-net-ipc-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-ipc-cmd.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-ipc-cmd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-ipc-cmd.c' object='corosync_qdevice-qdevice-net-ipc-cmd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-ipc-cmd.o `test -f 'qdevice-net-ipc-cmd.c' || echo '$(srcdir)/'`qdevice-net-ipc-cmd.c

corosync_qdevice-qdevice-net-ipc-cmd.obj: qdevice-net-ipc-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-ipc-cmd.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-ipc-cmd.Tpo -c -o corosync_qdevice-qdevice-net-ipc-cmd.obj `if test -f 'qdevice-net-ipc-cmd.c'; then $(CYGPATH_W) 'qdevice-net-ipc-cmd.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-ipc-cmd.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-ipc-cmd.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-ipc-cmd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-ipc-cmd.c' object='corosync_qdevice-qdevice-net-ipc-cmd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-ipc-cmd.obj `if test -f 'qdevice-net-ipc-cmd.c'; then $(CYGPATH_W) 'qdevice-net-ipc-cmd.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-ipc-cmd.c'; fi`

corosync_qdevice-qdevice-net-send.o: qdevice-net-send.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-send.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-send.Tpo -c -o corosync_qdevice-qdevice-net-send.o `test -f 'qdevice-net-send.c' || echo '$(srcdir)/'`qdevice-net-send.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-send.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-send.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-send.c' object='corosync_qdevice-qdevice-net-send.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-send.o `test -f 'qdevice-net-send.c' || echo '$(srcdir)/'`qdevice-net-send.c

corosync_qdevice-qdevice-net-send.obj: qdevice-net-send.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-send.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-send.Tpo -c -o corosync_qdevice-qdevice-net-send.obj `if test -f 'qdevice-net-send.c'; then $(CYGPATH_W) 'qdevice-net-send.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-send.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-send.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-send.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-send.c' object='corosync_qdevice-qdevice-net-send.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-send.obj `if test -f 'qdevice-net-send.c'; then $(CYGPATH_W) 'qdevice-net-send.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-send.c'; fi`

corosync_qdevice-qdevice-net-votequorum.o: qdevice-net-votequorum.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-votequorum.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-votequorum.Tpo -c -o corosync_qdevice-qdevice-net-votequorum.o `test -f 'qdevice-net-votequorum.c' || echo '$(srcdir)/'`qdevice-net-votequorum.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-votequorum.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-votequorum.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-votequorum.c' object='corosync_qdevice-qdevice-net-votequorum.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-votequorum.o `test -f 'qdevice-net-votequorum.c' || echo '$(srcdir)/'`qdevice-net-votequorum.c

corosync_qdevice-qdevice-net-votequorum.obj: qdevice-net-votequorum.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-votequorum.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-votequorum.Tpo -c -o corosync_qdevice-qdevice-net-votequorum.obj `if test -f 'qdevice-net-votequorum.c'; then $(CYGPATH_W) 'qdevice-net-votequorum.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-votequorum.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-votequorum.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-votequorum.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-votequorum.c' object='corosync_qdevice-qdevice-net-votequorum.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-votequorum.obj `if test -f 'qdevice-net-votequorum.c'; then $(CYGPATH_W) 'qdevice-net-votequorum.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-votequorum.c'; fi`

corosync_qdevice-qdevice-net-socket.o: qdevice-net-socket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-socket.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-socket.Tpo -c -o corosync_qdevice-qdevice-net-socket.o `test -f 'qdevice-net-socket.c' || echo '$(srcdir)/'`qdevice-net-socket.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-socket.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-socket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-socket.c' object='corosync_qdevice-qdevice-net-socket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-socket.o `test -f 'qdevice-net-socket.c' || echo '$(srcdir)/'`qdevice-net-socket.c

corosync_qdevice-qdevice-net-socket.obj: qdevice-net-socket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-socket.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-socket.Tpo -c -o corosync_qdevice-qdevice-net-socket.obj `if test -f 'qdevice-net-socket.c'; then $(CYGPATH_W) 'qdevice-net-socket.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-socket.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-socket.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-socket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-socket.c' object='corosync_qdevice-qdevice-net-socket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-socket.obj `if test -f 'qdevice-net-socket.c'; then $(CYGPATH_W) 'qdevice-net-socket.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-socket.c'; fi`

corosync_qdevice-qdevice-net-nss.o: qdevice-net-nss.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-nss.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-nss.Tpo -c -o corosync_qdevice-qdevice-net-nss.o `test -f 'qdevice-net-nss.c' || echo '$(srcdir)/'`qdevice-net-nss.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-nss.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-nss.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-nss.c' object='corosync_qdevice-qdevice-net-nss.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-nss.o `test -f 'qdevice-net-nss.c' || echo '$(srcdir)/'`qdevice-net-nss.c

corosync_qdevice-qdevice-net-nss.obj: qdevice-net-nss.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-nss.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-nss.Tpo -c -o corosync_qdevice-qdevice-net-nss.obj `if test -f 'qdevice-net-nss.c'; then $(CYGPATH_W) 'qdevice-net-nss.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-nss.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-nss.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-nss.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-nss.c' object='corosync_qdevice-qdevice-net-nss.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-nss.obj `if test -f 'qdevice-net-nss.c'; then $(CYGPATH_W) 'qdevice-net-nss.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-nss.c'; fi`

corosync_qdevice-qdevice-net-msg-received.o: qdevice-net-msg-received.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-msg-received.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-msg-received.Tpo -c -o corosync_qdevice-qdevice-net-msg-received.o `test -f 'qdevice-net-msg-received.c' || echo '$(srcdir)/'`qdevice-net-msg-received.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-msg-received.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-msg-received.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-msg-received.c' object='corosync_qdevice-qdevice-net-msg-received.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-msg-received.o `test -f 'qdevice-net-msg-received.c' || echo '$(srcdir)/'`qdevice-net-msg-received.c

corosync_qdevice-qdevice-net-msg-received.obj: qdevice-net-msg-received.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-msg-received.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-msg-received.Tpo -c -o corosync_qdevice-qdevice-net-msg-received.obj `if test -f 'qdevice-net-msg-received.c'; then $(CYGPATH_W) 'qdevice-net-msg-received.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-msg-received.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-msg-received.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-msg-received.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-msg-received.c' object='corosync_qdevice-qdevice-net-msg-received.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-msg-received.obj `if test -f 'qdevice-net-msg-received.c'; then $(CYGPATH_W) 'qdevice-net-msg-received.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-msg-received.c'; fi`

corosync_qdevice-qdevice-net-cast-vote-timer.o: qdevice-net-cast-vote-timer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-cast-vote-timer.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-cast-vote-timer.Tpo -c -o corosync_qdevice-qdevice-net-cast-vote-timer.o `test -f 'qdevice-net-cast-vote-timer.c' || echo '$(srcdir)/'`qdevice-net-cast-vote-timer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-cast-vote-timer.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-cast-vote-timer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-cast-vote-timer.c' object='corosync_qdevice-qdevice-net-cast-vote-timer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-cast-vote-timer.o `test -f 'qdevice-net-cast-vote-timer.c' || echo '$(srcdir)/'`qdevice-net-cast-vote-timer.c

corosync_qdevice-qdevice-net-cast-vote-timer.obj: qdevice-net-cast-vote-timer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-cast-vote-timer.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-cast-vote-timer.Tpo -c -o corosync_qdevice-qdevice-net-cast-vote-timer.obj `if test -f 'qdevice-net-cast-vote-timer.c'; then $(CYGPATH_W) 'qdevice-net-cast-vote-timer.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-cast-vote-timer.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-cast-vote-timer.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-cast-vote-timer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-cast-vote-timer.c' object='corosync_qdevice-qdevice-net-cast-vote-timer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-cast-vote-timer.obj `if test -f 'qdevice-net-cast-vote-timer.c'; then $(CYGPATH_W) 'qdevice-net-cast-vote-timer.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-cast-vote-timer.c'; fi`

corosync_qdevice-qdevice-net-echo-request-timer.o: qdevice-net-echo-request-timer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-echo-request-timer.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-echo-request-timer.Tpo -c -o corosync_qdevice-qdevice-net-echo-request-timer.o `test -f 'qdevice-net-echo-request-timer.c' || echo '$(srcdir)/'`qdevice-net-echo-request-timer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-echo-request-timer.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-echo-request-timer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-echo-request-timer.c' object='corosync_qdevice-qdevice-net-echo-request-timer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-echo-request-timer.o `test -f 'qdevice-net-echo-request-timer.c' || echo '$(srcdir)/'`qdevice-net-echo-request-timer.c

corosync_qdevice-qdevice-net-echo-request-timer.obj: qdevice-net-echo-request-timer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-echo-request-timer.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-echo-request-timer.Tpo -c -o corosync_qdevice-qdevice-net-echo-request-timer.obj `if test -f 'qdevice-net-echo-request-timer.c'; then $(CYGPATH_W) 'qdevice-net-echo-request-timer.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-echo-request-timer.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-echo-request-timer.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-echo-request-timer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-echo-request-timer.c' object='corosync_qdevice-qdevice-net-echo-request-timer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-echo-request-timer.obj `if test -f 'qdevice-net-echo-request-timer.c'; then $(CYGPATH_W) 'qdevice-net-echo-request-timer.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-echo-request-timer.c'; fi`

corosync_qdevice-qdevice-net-algorithm.o: qdevice-net-algorithm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-algorithm.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-algorithm.Tpo -c -o corosync_qdevice-qdevice-net-algorithm.o `test -f 'qdevice-net-algorithm.c' || echo '$(srcdir)/'`qdevice-net-algorithm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-algorithm.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-algorithm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-algorithm.c' object='corosync_qdevice-qdevice-net-algorithm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-algorithm.o `test -f 'qdevice-net-algorithm.c' || echo '$(srcdir)/'`qdevice-net-algorithm.c

corosync_qdevice-qdevice-net-algorithm.obj: qdevice-net-algorithm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-algorithm.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-algorithm.Tpo -c -o corosync_qdevice-qdevice-net-algorithm.obj `if test -f 'qdevice-net-algorithm.c'; then $(CYGPATH_W) 'qdevice-net-algorithm.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-algorithm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-algorithm.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-algorithm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-algorithm.c' object='corosync_qdevice-qdevice-net-algorithm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-algorithm.obj `if test -f 'qdevice-net-algorithm.c'; then $(CYGPATH_W) 'qdevice-net-algorithm.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-algorithm.c'; fi`

corosync_qdevice-qdevice-net-algo-test.o: qdevice-net-algo-test.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-algo-test.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-algo-test.Tpo -c -o corosync_qdevice-qdevice-net-algo-test.o `test -f 'qdevice-net-algo-test.c' || echo '$(srcdir)/'`qdevice-net-algo-test.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-algo-test.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-algo-test.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-algo-test.c' object='corosync_qdevice-qdevice-net-algo-test.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-algo-test.o `test -f 'qdevice-net-algo-test.c' || echo '$(srcdir)/'`qdevice-net-algo-test.c

corosync_qdevice-qdevice-net-algo-test.obj: qdevice-net-algo-test.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-algo-test.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-algo-test.Tpo -c -o corosync_qdevice-qdevice-net-algo-test.obj `if test -f 'qdevice-net-algo-test.c'; then $(CYGPATH_W) 'qdevice-net-algo-test.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-algo-test.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-algo-test.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-algo-test.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-algo-test.c' object='corosync_qdevice-qdevice-net-algo-test.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-algo-test.obj `if test -f 'qdevice-net-algo-test.c'; then $(CYGPATH_W) 'qdevice-net-algo-test.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-algo-test.c'; fi`

corosync_qdevice-qdevice-net-algo-ffsplit.o: qdevice-net-algo-ffsplit.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-algo-ffsplit.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-algo-ffsplit.Tpo -c -o corosync_qdevice-qdevice-net-algo-ffsplit.o `test -f 'qdevice-net-algo-ffsplit.c' || echo '$(srcdir)/'`qdevice-net-algo-ffsplit.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-algo-ffsplit.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-algo-ffsplit.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-algo-ffsplit.c' object='corosync_qdevice-qdevice-net-algo-ffsplit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-algo-ffsplit.o `test -f 'qdevice-net-algo-ffsplit.c' || echo '$(srcdir)/'`qdevice-net-algo-ffsplit.c

corosync_qdevice-qdevice-net-algo-ffsplit.obj: qdevice-net-algo-ffsplit.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-algo-ffsplit.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-algo-ffsplit.Tpo -c -o corosync_qdevice-qdevice-net-algo-ffsplit.obj `if test -f 'qdevice-net-algo-ffsplit.c'; then $(CYGPATH_W) 'qdevice-net-algo-ffsplit.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-algo-ffsplit.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-algo-ffsplit.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-algo-ffsplit.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-algo-ffsplit.c' object='corosync_qdevice-qdevice-net-algo-ffsplit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-algo-ffsplit.obj `if test -f 'qdevice-net-algo-ffsplit.c'; then $(CYGPATH_W) 'qdevice-net-algo-ffsplit.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-algo-ffsplit.c'; fi`

corosync_qdevice-qdevice-net-algo-2nodelms.o: qdevice-net-algo-2nodelms.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-algo-2nodelms.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-algo-2nodelms.Tpo -c -o corosync_qdevice-qdevice-net-algo-2nodelms.o `test -f 'qdevice-net-algo-2nodelms.c' || echo '$(srcdir)/'`qdevice-net-algo-2nodelms.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-algo-2nodelms.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-algo-2nodelms.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-algo-2nodelms.c' object='corosync_qdevice-qdevice-net-algo-2nodelms.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-algo-2nodelms.o `test -f 'qdevice-net-algo-2nodelms.c' || echo '$(srcdir)/'`qdevice-net-algo-2nodelms.c

corosync_qdevice-qdevice-net-algo-2nodelms.obj: qdevice-net-algo-2nodelms.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-algo-2nodelms.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-algo-2nodelms.Tpo -c -o corosync_qdevice-qdevice-net-algo-2nodelms.obj `if test -f 'qdevice-net-algo-2nodelms.c'; then $(CYGPATH_W) 'qdevice-net-algo-2nodelms.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-algo-2nodelms.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-algo-2nodelms.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-algo-2nodelms.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-algo-2nodelms.c' object='corosync_qdevice-qdevice-net-algo-2nodelms.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-algo-2nodelms.obj `if test -f 'qdevice-net-algo-2nodelms.c'; then $(CYGPATH_W) 'qdevice-net-algo-2nodelms.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-algo-2nodelms.c'; fi`

corosync_qdevice-qdevice-net-algo-lms.o: qdevice-net-algo-lms.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-algo-lms.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-algo-lms.Tpo -c -o corosync_qdevice-qdevice-net-algo-lms.o `test -f 'qdevice-net-algo-lms.c' || echo '$(srcdir)/'`qdevice-net-algo-lms.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-algo-lms.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-algo-lms.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-algo-lms.c' object='corosync_qdevice-qdevice-net-algo-lms.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-algo-lms.o `test -f 'qdevice-net-algo-lms.c' || echo '$(srcdir)/'`qdevice-net-algo-lms.c

corosync_qdevice-qdevice-net-algo-lms.obj: qdevice-net-algo-lms.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-algo-lms.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-algo-lms.Tpo -c -o corosync_qdevice-qdevice-net-algo-lms.obj `if test -f 'qdevice-net-algo-lms.c'; then $(CYGPATH_W) 'qdevice-net-algo-lms.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-algo-lms.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-algo-lms.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-algo-lms.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-algo-lms.c' object='corosync_qdevice-qdevice-net-algo-lms.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-algo-lms.obj `if test -f 'qdevice-net-algo-lms.c'; then $(CYGPATH_W) 'qdevice-net-algo-lms.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-algo-lms.c'; fi`

corosync_qdevice-qdevice-advanced-settings.o: qdevice-advanced-settings.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-advanced-settings.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-advanced-settings.Tpo -c -o corosync_qdevice-qdevice-advanced-settings.o `test -f 'qdevice-advanced-settings.c' || echo '$(srcdir)/'`qdevice-advanced-settings.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-advanced-settings.Tpo $(DEPDIR)/corosync_qdevice-qdevice-advanced-settings.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-advanced-settings.c' object='corosync_qdevice-qdevice-advanced-settings.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-advanced-settings.o `test -f 'qdevice-advanced-settings.c' || echo '$(srcdir)/'`qdevice-advanced-settings.c

corosync_qdevice-qdevice-advanced-settings.obj: qdevice-advanced-settings.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-advanced-settings.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-advanced-settings.Tpo -c -o corosync_qdevice-qdevice-advanced-settings.obj `if test -f 'qdevice-advanced-settings.c'; then $(CYGPATH_W) 'qdevice-advanced-settings.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-advanced-settings.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-advanced-settings.Tpo $(DEPDIR)/corosync_qdevice-qdevice-advanced-settings.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-advanced-settings.c' object='corosync_qdevice-qdevice-advanced-settings.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-advanced-settings.obj `if test -f 'qdevice-advanced-settings.c'; then $(CYGPATH_W) 'qdevice-advanced-settings.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-advanced-settings.c'; fi`

corosync_qdevice-dynar-getopt-lex.o: dynar-getopt-lex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-dynar-getopt-lex.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-dynar-getopt-lex.Tpo -c -o corosync_qdevice-dynar-getopt-lex.o `test -f 'dynar-getopt-lex.c' || echo '$(srcdir)/'`dynar-getopt-lex.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-dynar-getopt-lex.Tpo $(DEPDIR)/corosync_qdevice-dynar-getopt-lex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar-getopt-lex.c' object='corosync_qdevice-dynar-getopt-lex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-dynar-getopt-lex.o `test -f 'dynar-getopt-lex.c' || echo '$(srcdir)/'`dynar-getopt-lex.c

corosync_qdevice-dynar-getopt-lex.obj: dynar-getopt-lex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-dynar-getopt-lex.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-dynar-getopt-lex.Tpo -c -o corosync_qdevice-dynar-getopt-lex.obj `if test -f 'dynar-getopt-lex.c'; then $(CYGPATH_W) 'dynar-getopt-lex.c'; else $(CYGPATH_W) '$(srcdir)/dynar-getopt-lex.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-dynar-getopt-lex.Tpo $(DEPDIR)/corosync_qdevice-dynar-getopt-lex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar-getopt-lex.c' object='corosync_qdevice-dynar-getopt-lex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-dynar-getopt-lex.obj `if test -f 'dynar-getopt-lex.c'; then $(CYGPATH_W) 'dynar-getopt-lex.c'; else $(CYGPATH_W) '$(srcdir)/dynar-getopt-lex.c'; fi`

corosync_qdevice-qdevice-heuristics.o: qdevice-heuristics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics.Tpo -c -o corosync_qdevice-qdevice-heuristics.o `test -f 'qdevice-heuristics.c' || echo '$(srcdir)/'`qdevice-heuristics.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics.c' object='corosync_qdevice-qdevice-heuristics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics.o `test -f 'qdevice-heuristics.c' || echo '$(srcdir)/'`qdevice-heuristics.c

corosync_qdevice-qdevice-heuristics.obj: qdevice-heuristics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics.Tpo -c -o corosync_qdevice-qdevice-heuristics.obj `if test -f 'qdevice-heuristics.c'; then $(CYGPATH_W) 'qdevice-heuristics.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics.c' object='corosync_qdevice-qdevice-heuristics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics.obj `if test -f 'qdevice-heuristics.c'; then $(CYGPATH_W) 'qdevice-heuristics.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics.c'; fi`

corosync_qdevice-qdevice-heuristics-worker.o: qdevice-heuristics-worker.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-worker.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker.Tpo -c -o corosync_qdevice-qdevice-heuristics-worker.o `test -f 'qdevice-heuristics-worker.c' || echo '$(srcdir)/'`qdevice-heuristics-worker.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-worker.c' object='corosync_qdevice-qdevice-heuristics-worker.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-worker.o `test -f 'qdevice-heuristics-worker.c' || echo '$(srcdir)/'`qdevice-heuristics-worker.c

corosync_qdevice-qdevice-heuristics-worker.obj: qdevice-heuristics-worker.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-worker.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker.Tpo -c -o corosync_qdevice-qdevice-heuristics-worker.obj `if test -f 'qdevice-heuristics-worker.c'; then $(CYGPATH_W) 'qdevice-heuristics-worker.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-worker.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-worker.c' object='corosync_qdevice-qdevice-heuristics-worker.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-worker.obj `if test -f 'qdevice-heuristics-worker.c'; then $(CYGPATH_W) 'qdevice-heuristics-worker.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-worker.c'; fi`

corosync_qdevice-qdevice-heuristics-io.o: qdevice-heuristics-io.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-io.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-io.Tpo -c -o corosync_qdevice-qdevice-heuristics-io.o `test -f 'qdevice-heuristics-io.c' || echo '$(srcdir)/'`qdevice-heuristics-io.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-io.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-io.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-io.c' object='corosync_qdevice-qdevice-heuristics-io.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-io.o `test -f 'qdevice-heuristics-io.c' || echo '$(srcdir)/'`qdevice-heuristics-io.c

corosync_qdevice-qdevice-heuristics-io.obj: qdevice-heuristics-io.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-io.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-io.Tpo -c -o corosync_qdevice-qdevice-heuristics-io.obj `if test -f 'qdevice-heuristics-io.c'; then $(CYGPATH_W) 'qdevice-heuristics-io.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-io.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-io.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-io.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-io.c' object='corosync_qdevice-qdevice-heuristics-io.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-io.obj `if test -f 'qdevice-heuristics-io.c'; then $(CYGPATH_W) 'qdevice-heuristics-io.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-io.c'; fi`

corosync_qdevice-qdevice-heuristics-worker-log.o: qdevice-heuristics-worker-log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-worker-log.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker-log.Tpo -c -o corosync_qdevice-qdevice-heuristics-worker-log.o `test -f 'qdevice-heuristics-worker-log.c' || echo '$(srcdir)/'`qdevice-heuristics-worker-log.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker-log.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker-log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-worker-log.c' object='corosync_qdevice-qdevice-heuristics-worker-log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-worker-log.o `test -f 'qdevice-heuristics-worker-log.c' || echo '$(srcdir)/'`qdevice-heuristics-worker-log.c

corosync_qdevice-qdevice-heuristics-worker-log.obj: qdevice-heuristics-worker-log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-worker-log.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker-log.Tpo -c -o corosync_qdevice-qdevice-heuristics-worker-log.obj `if test -f 'qdevice-heuristics-worker-log.c'; then $(CYGPATH_W) 'qdevice-heuristics-worker-log.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-worker-log.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker-log.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker-log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-worker-log.c' object='corosync_qdevice-qdevice-heuristics-worker-log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-worker-log.obj `if test -f 'qdevice-heuristics-worker-log.c'; then $(CYGPATH_W) 'qdevice-heuristics-worker-log.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-worker-log.c'; fi`

corosync_qdevice-qdevice-heuristics-log.o: qdevice-heuristics-log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-log.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-log.Tpo -c -o corosync_qdevice-qdevice-heuristics-log.o `test -f 'qdevice-heuristics-log.c' || echo '$(srcdir)/'`qdevice-heuristics-log.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-log.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-log.c' object='corosync_qdevice-qdevice-heuristics-log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-log.o `test -f 'qdevice-heuristics-log.c' || echo '$(srcdir)/'`qdevice-heuristics-log.c

corosync_qdevice-qdevice-heuristics-log.obj: qdevice-heuristics-log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-log.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-log.Tpo -c -o corosync_qdevice-qdevice-heuristics-log.obj `if test -f 'qdevice-heuristics-log.c'; then $(CYGPATH_W) 'qdevice-heuristics-log.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-log.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-log.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-log.c' object='corosync_qdevice-qdevice-heuristics-log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-log.obj `if test -f 'qdevice-heuristics-log.c'; then $(CYGPATH_W) 'qdevice-heuristics-log.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-log.c'; fi`

corosync_qdevice-qdevice-heuristics-instance.o: qdevice-heuristics-instance.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-instance.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-instance.Tpo -c -o corosync_qdevice-qdevice-heuristics-instance.o `test -f 'qdevice-heuristics-instance.c' || echo '$(srcdir)/'`qdevice-heuristics-instance.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-instance.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-instance.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-instance.c' object='corosync_qdevice-qdevice-heuristics-instance.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-instance.o `test -f 'qdevice-heuristics-instance.c' || echo '$(srcdir)/'`qdevice-heuristics-instance.c

corosync_qdevice-qdevice-heuristics-instance.obj: qdevice-heuristics-instance.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-instance.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-instance.Tpo -c -o corosync_qdevice-qdevice-heuristics-instance.obj `if test -f 'qdevice-heuristics-instance.c'; then $(CYGPATH_W) 'qdevice-heuristics-instance.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-instance.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-instance.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-instance.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-instance.c' object='corosync_qdevice-qdevice-heuristics-instance.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-instance.obj `if test -f 'qdevice-heuristics-instance.c'; then $(CYGPATH_W) 'qdevice-heuristics-instance.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-instance.c'; fi`

corosync_qdevice-qdevice-heuristics-mode.o: qdevice-heuristics-mode.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-mode.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-mode.Tpo -c -o corosync_qdevice-qdevice-heuristics-mode.o `test -f 'qdevice-heuristics-mode.c' || echo '$(srcdir)/'`qdevice-heuristics-mode.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-mode.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-mode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-mode.c' object='corosync_qdevice-qdevice-heuristics-mode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-mode.o `test -f 'qdevice-heuristics-mode.c' || echo '$(srcdir)/'`qdevice-heuristics-mode.c

corosync_qdevice-qdevice-heuristics-mode.obj: qdevice-heuristics-mode.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-mode.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-mode.Tpo -c -o corosync_qdevice-qdevice-heuristics-mode.obj `if test -f 'qdevice-heuristics-mode.c'; then $(CYGPATH_W) 'qdevice-heuristics-mode.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-mode.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-mode.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-mode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-mode.c' object='corosync_qdevice-qdevice-heuristics-mode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-mode.obj `if test -f 'qdevice-heuristics-mode.c'; then $(CYGPATH_W) 'qdevice-heuristics-mode.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-mode.c'; fi`

corosync_qdevice-qdevice-heuristics-exec-list.o: qdevice-heuristics-exec-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-exec-list.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-exec-list.Tpo -c -o corosync_qdevice-qdevice-heuristics-exec-list.o `test -f 'qdevice-heuristics-exec-list.c' || echo '$(srcdir)/'`qdevice-heuristics-exec-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-exec-list.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-exec-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-exec-list.c' object='corosync_qdevice-qdevice-heuristics-exec-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-exec-list.o `test -f 'qdevice-heuristics-exec-list.c' || echo '$(srcdir)/'`qdevice-heuristics-exec-list.c

corosync_qdevice-qdevice-heuristics-exec-list.obj: qdevice-heuristics-exec-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-exec-list.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-exec-list.Tpo -c -o corosync_qdevice-qdevice-heuristics-exec-list.obj `if test -f 'qdevice-heuristics-exec-list.c'; then $(CYGPATH_W) 'qdevice-heuristics-exec-list.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-exec-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-exec-list.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-exec-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-exec-list.c' object='corosync_qdevice-qdevice-heuristics-exec-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-exec-list.obj `if test -f 'qdevice-heuristics-exec-list.c'; then $(CYGPATH_W) 'qdevice-heuristics-exec-list.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-exec-list.c'; fi`

corosync_qdevice-qdevice-heuristics-cmd.o: qdevice-heuristics-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-cmd.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-cmd.Tpo -c -o corosync_qdevice-qdevice-heuristics-cmd.o `test -f 'qdevice-heuristics-cmd.c' || echo '$(srcdir)/'`qdevice-heuristics-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-cmd.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-cmd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-cmd.c' object='corosync_qdevice-qdevice-heuristics-cmd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-cmd.o `test -f 'qdevice-heuristics-cmd.c' || echo '$(srcdir)/'`qdevice-heuristics-cmd.c

corosync_qdevice-qdevice-heuristics-cmd.obj: qdevice-heuristics-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-cmd.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-cmd.Tpo -c -o corosync_qdevice-qdevice-heuristics-cmd.obj `if test -f 'qdevice-heuristics-cmd.c'; then $(CYGPATH_W) 'qdevice-heuristics-cmd.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-cmd.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-cmd.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-cmd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-cmd.c' object='corosync_qdevice-qdevice-heuristics-cmd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-cmd.obj `if test -f 'qdevice-heuristics-cmd.c'; then $(CYGPATH_W) 'qdevice-heuristics-cmd.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-cmd.c'; fi`

corosync_qdevice-qdevice-heuristics-worker-cmd.o: qdevice-heuristics-worker-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-worker-cmd.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker-cmd.Tpo -c -o corosync_qdevice-qdevice-heuristics-worker-cmd.o `test -f 'qdevice-heuristics-worker-cmd.c' || echo '$(srcdir)/'`qdevice-heuristics-worker-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker-cmd.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker-cmd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-worker-cmd.c' object='corosync_qdevice-qdevice-heuristics-worker-cmd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-worker-cmd.o `test -f 'qdevice-heuristics-worker-cmd.c' || echo '$(srcdir)/'`qdevice-heuristics-worker-cmd.c

corosync_qdevice-qdevice-heuristics-worker-cmd.obj: qdevice-heuristics-worker-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-worker-cmd.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker-cmd.Tpo -c -o corosync_qdevice-qdevice-heuristics-worker-cmd.obj `if test -f 'qdevice-heuristics-worker-cmd.c'; then $(CYGPATH_W) 'qdevice-heuristics-worker-cmd.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-worker-cmd.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker-cmd.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-worker-cmd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-worker-cmd.c' object='corosync_qdevice-qdevice-heuristics-worker-cmd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-worker-cmd.obj `if test -f 'qdevice-heuristics-worker-cmd.c'; then $(CYGPATH_W) 'qdevice-heuristics-worker-cmd.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-worker-cmd.c'; fi`

corosync_qdevice-qdevice-heuristics-exec-result.o: qdevice-heuristics-exec-result.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-exec-result.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-exec-result.Tpo -c -o corosync_qdevice-qdevice-heuristics-exec-result.o `test -f 'qdevice-heuristics-exec-result.c' || echo '$(srcdir)/'`qdevice-heuristics-exec-result.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-exec-result.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-exec-result.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-exec-result.c' object='corosync_qdevice-qdevice-heuristics-exec-result.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-exec-result.o `test -f 'qdevice-heuristics-exec-result.c' || echo '$(srcdir)/'`qdevice-heuristics-exec-result.c

corosync_qdevice-qdevice-heuristics-exec-result.obj: qdevice-heuristics-exec-result.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-exec-result.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-exec-result.Tpo -c -o corosync_qdevice-qdevice-heuristics-exec-result.obj `if test -f 'qdevice-heuristics-exec-result.c'; then $(CYGPATH_W) 'qdevice-heuristics-exec-result.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-exec-result.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-exec-result.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-exec-result.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-exec-result.c' object='corosync_qdevice-qdevice-heuristics-exec-result.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-exec-result.obj `if test -f 'qdevice-heuristics-exec-result.c'; then $(CYGPATH_W) 'qdevice-heuristics-exec-result.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-exec-result.c'; fi`

corosync_qdevice-process-list.o: process-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-process-list.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-process-list.Tpo -c -o corosync_qdevice-process-list.o `test -f 'process-list.c' || echo '$(srcdir)/'`process-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-process-list.Tpo $(DEPDIR)/corosync_qdevice-process-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='process-list.c' object='corosync_qdevice-process-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-process-list.o `test -f 'process-list.c' || echo '$(srcdir)/'`process-list.c

corosync_qdevice-process-list.obj: process-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-process-list.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-process-list.Tpo -c -o corosync_qdevice-process-list.obj `if test -f 'process-list.c'; then $(CYGPATH_W) 'process-list.c'; else $(CYGPATH_W) '$(srcdir)/process-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-process-list.Tpo $(DEPDIR)/corosync_qdevice-process-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='process-list.c' object='corosync_qdevice-process-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-process-list.obj `if test -f 'process-list.c'; then $(CYGPATH_W) 'process-list.c'; else $(CYGPATH_W) '$(srcdir)/process-list.c'; fi`

corosync_qdevice-qdevice-net-heuristics.o: qdevice-net-heuristics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-heuristics.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-heuristics.Tpo -c -o corosync_qdevice-qdevice-net-heuristics.o `test -f 'qdevice-net-heuristics.c' || echo '$(srcdir)/'`qdevice-net-heuristics.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-heuristics.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-heuristics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-heuristics.c' object='corosync_qdevice-qdevice-net-heuristics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-heuristics.o `test -f 'qdevice-net-heuristics.c' || echo '$(srcdir)/'`qdevice-net-heuristics.c

corosync_qdevice-qdevice-net-heuristics.obj: qdevice-net-heuristics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-net-heuristics.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-net-heuristics.Tpo -c -o corosync_qdevice-qdevice-net-heuristics.obj `if test -f 'qdevice-net-heuristics.c'; then $(CYGPATH_W) 'qdevice-net-heuristics.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-heuristics.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-net-heuristics.Tpo $(DEPDIR)/corosync_qdevice-qdevice-net-heuristics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-net-heuristics.c' object='corosync_qdevice-qdevice-net-heuristics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-net-heuristics.obj `if test -f 'qdevice-net-heuristics.c'; then $(CYGPATH_W) 'qdevice-net-heuristics.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-net-heuristics.c'; fi`

corosync_qdevice-qdevice-heuristics-result-notifier.o: qdevice-heuristics-result-notifier.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-result-notifier.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-result-notifier.Tpo -c -o corosync_qdevice-qdevice-heuristics-result-notifier.o `test -f 'qdevice-heuristics-result-notifier.c' || echo '$(srcdir)/'`qdevice-heuristics-result-notifier.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-result-notifier.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-result-notifier.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-result-notifier.c' object='corosync_qdevice-qdevice-heuristics-result-notifier.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-result-notifier.o `test -f 'qdevice-heuristics-result-notifier.c' || echo '$(srcdir)/'`qdevice-heuristics-result-notifier.c

corosync_qdevice-qdevice-heuristics-result-notifier.obj: qdevice-heuristics-result-notifier.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-heuristics-result-notifier.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-heuristics-result-notifier.Tpo -c -o corosync_qdevice-qdevice-heuristics-result-notifier.obj `if test -f 'qdevice-heuristics-result-notifier.c'; then $(CYGPATH_W) 'qdevice-heuristics-result-notifier.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-result-notifier.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-heuristics-result-notifier.Tpo $(DEPDIR)/corosync_qdevice-qdevice-heuristics-result-notifier.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-heuristics-result-notifier.c' object='corosync_qdevice-qdevice-heuristics-result-notifier.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-heuristics-result-notifier.obj `if test -f 'qdevice-heuristics-result-notifier.c'; then $(CYGPATH_W) 'qdevice-heuristics-result-notifier.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-heuristics-result-notifier.c'; fi`

corosync_qdevice-log.o: log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-log.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-log.Tpo -c -o corosync_qdevice-log.o `test -f 'log.c' || echo '$(srcdir)/'`log.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-log.Tpo $(DEPDIR)/corosync_qdevice-log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='log.c' object='corosync_qdevice-log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-log.o `test -f 'log.c' || echo '$(srcdir)/'`log.c

corosync_qdevice-log.obj: log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-log.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-log.Tpo -c -o corosync_qdevice-log.obj `if test -f 'log.c'; then $(CYGPATH_W) 'log.c'; else $(CYGPATH_W) '$(srcdir)/log.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-log.Tpo $(DEPDIR)/corosync_qdevice-log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='log.c' object='corosync_qdevice-log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-log.obj `if test -f 'log.c'; then $(CYGPATH_W) 'log.c'; else $(CYGPATH_W) '$(srcdir)/log.c'; fi`

corosync_qdevice-pr-poll-loop.o: pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-pr-poll-loop.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-pr-poll-loop.Tpo -c -o corosync_qdevice-pr-poll-loop.o `test -f 'pr-poll-loop.c' || echo '$(srcdir)/'`pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-pr-poll-loop.Tpo $(DEPDIR)/corosync_qdevice-pr-poll-loop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pr-poll-loop.c' object='corosync_qdevice-pr-poll-loop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-pr-poll-loop.o `test -f 'pr-poll-loop.c' || echo '$(srcdir)/'`pr-poll-loop.c

corosync_qdevice-pr-poll-loop.obj: pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-pr-poll-loop.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-pr-poll-loop.Tpo -c -o corosync_qdevice-pr-poll-loop.obj `if test -f 'pr-poll-loop.c'; then $(CYGPATH_W) 'pr-poll-loop.c'; else $(CYGPATH_W) '$(srcdir)/pr-poll-loop.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-pr-poll-loop.Tpo $(DEPDIR)/corosync_qdevice-pr-poll-loop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pr-poll-loop.c' object='corosync_qdevice-pr-poll-loop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-pr-poll-loop.obj `if test -f 'pr-poll-loop.c'; then $(CYGPATH_W) 'pr-poll-loop.c'; else $(CYGPATH_W) '$(srcdir)/pr-poll-loop.c'; fi`

corosync_qdevice-qdevice-pr-poll-loop-cb.o: qdevice-pr-poll-loop-cb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-pr-poll-loop-cb.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-pr-poll-loop-cb.Tpo -c -o corosync_qdevice-qdevice-pr-poll-loop-cb.o `test -f 'qdevice-pr-poll-loop-cb.c' || echo '$(srcdir)/'`qdevice-pr-poll-loop-cb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-pr-poll-loop-cb.Tpo $(DEPDIR)/corosync_qdevice-qdevice-pr-poll-loop-cb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-pr-poll-loop-cb.c' object='corosync_qdevice-qdevice-pr-poll-loop-cb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-pr-poll-loop-cb.o `test -f 'qdevice-pr-poll-loop-cb.c' || echo '$(srcdir)/'`qdevice-pr-poll-loop-cb.c

corosync_qdevice-qdevice-pr-poll-loop-cb.obj: qdevice-pr-poll-loop-cb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-pr-poll-loop-cb.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-pr-poll-loop-cb.Tpo -c -o corosync_qdevice-qdevice-pr-poll-loop-cb.obj `if test -f 'qdevice-pr-poll-loop-cb.c'; then $(CYGPATH_W) 'qdevice-pr-poll-loop-cb.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-pr-poll-loop-cb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-pr-poll-loop-cb.Tpo $(DEPDIR)/corosync_qdevice-qdevice-pr-poll-loop-cb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-pr-poll-loop-cb.c' object='corosync_qdevice-qdevice-pr-poll-loop-cb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-pr-poll-loop-cb.obj `if test -f 'qdevice-pr-poll-loop-cb.c'; then $(CYGPATH_W) 'qdevice-pr-poll-loop-cb.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-pr-poll-loop-cb.c'; fi`

corosync_qdevice-qdevice-pr-poll-loop.o: qdevice-pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-pr-poll-loop.o -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-pr-poll-loop.Tpo -c -o corosync_qdevice-qdevice-pr-poll-loop.o `test -f 'qdevice-pr-poll-loop.c' || echo '$(srcdir)/'`qdevice-pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-pr-poll-loop.Tpo $(DEPDIR)/corosync_qdevice-qdevice-pr-poll-loop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-pr-poll-loop.c' object='corosync_qdevice-qdevice-pr-poll-loop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-pr-poll-loop.o `test -f 'qdevice-pr-poll-loop.c' || echo '$(srcdir)/'`qdevice-pr-poll-loop.c

corosync_qdevice-qdevice-pr-poll-loop.obj: qdevice-pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -MT corosync_qdevice-qdevice-pr-poll-loop.obj -MD -MP -MF $(DEPDIR)/corosync_qdevice-qdevice-pr-poll-loop.Tpo -c -o corosync_qdevice-qdevice-pr-poll-loop.obj `if test -f 'qdevice-pr-poll-loop.c'; then $(CYGPATH_W) 'qdevice-pr-poll-loop.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-pr-poll-loop.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qdevice-qdevice-pr-poll-loop.Tpo $(DEPDIR)/corosync_qdevice-qdevice-pr-poll-loop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qdevice-pr-poll-loop.c' object='corosync_qdevice-qdevice-pr-poll-loop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qdevice_CFLAGS) $(CFLAGS) -c -o corosync_qdevice-qdevice-pr-poll-loop.obj `if test -f 'qdevice-pr-poll-loop.c'; then $(CYGPATH_W) 'qdevice-pr-poll-loop.c'; else $(CYGPATH_W) '$(srcdir)/qdevice-pr-poll-loop.c'; fi`

corosync_qnetd-corosync-qnetd.o: corosync-qnetd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-corosync-qnetd.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-corosync-qnetd.Tpo -c -o corosync_qnetd-corosync-qnetd.o `test -f 'corosync-qnetd.c' || echo '$(srcdir)/'`corosync-qnetd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-corosync-qnetd.Tpo $(DEPDIR)/corosync_qnetd-corosync-qnetd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='corosync-qnetd.c' object='corosync_qnetd-corosync-qnetd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-corosync-qnetd.o `test -f 'corosync-qnetd.c' || echo '$(srcdir)/'`corosync-qnetd.c

corosync_qnetd-corosync-qnetd.obj: corosync-qnetd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-corosync-qnetd.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-corosync-qnetd.Tpo -c -o corosync_qnetd-corosync-qnetd.obj `if test -f 'corosync-qnetd.c'; then $(CYGPATH_W) 'corosync-qnetd.c'; else $(CYGPATH_W) '$(srcdir)/corosync-qnetd.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-corosync-qnetd.Tpo $(DEPDIR)/corosync_qnetd-corosync-qnetd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='corosync-qnetd.c' object='corosync_qnetd-corosync-qnetd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-corosync-qnetd.obj `if test -f 'corosync-qnetd.c'; then $(CYGPATH_W) 'corosync-qnetd.c'; else $(CYGPATH_W) '$(srcdir)/corosync-qnetd.c'; fi`

corosync_qnetd-dynar.o: dynar.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-dynar.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-dynar.Tpo -c -o corosync_qnetd-dynar.o `test -f 'dynar.c' || echo '$(srcdir)/'`dynar.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-dynar.Tpo $(DEPDIR)/corosync_qnetd-dynar.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar.c' object='corosync_qnetd-dynar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-dynar.o `test -f 'dynar.c' || echo '$(srcdir)/'`dynar.c

corosync_qnetd-dynar.obj: dynar.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-dynar.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-dynar.Tpo -c -o corosync_qnetd-dynar.obj `if test -f 'dynar.c'; then $(CYGPATH_W) 'dynar.c'; else $(CYGPATH_W) '$(srcdir)/dynar.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-dynar.Tpo $(DEPDIR)/corosync_qnetd-dynar.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar.c' object='corosync_qnetd-dynar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-dynar.obj `if test -f 'dynar.c'; then $(CYGPATH_W) 'dynar.c'; else $(CYGPATH_W) '$(srcdir)/dynar.c'; fi`

corosync_qnetd-msg.o: msg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-msg.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-msg.Tpo -c -o corosync_qnetd-msg.o `test -f 'msg.c' || echo '$(srcdir)/'`msg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-msg.Tpo $(DEPDIR)/corosync_qnetd-msg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='msg.c' object='corosync_qnetd-msg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-msg.o `test -f 'msg.c' || echo '$(srcdir)/'`msg.c

corosync_qnetd-msg.obj: msg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-msg.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-msg.Tpo -c -o corosync_qnetd-msg.obj `if test -f 'msg.c'; then $(CYGPATH_W) 'msg.c'; else $(CYGPATH_W) '$(srcdir)/msg.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-msg.Tpo $(DEPDIR)/corosync_qnetd-msg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='msg.c' object='corosync_qnetd-msg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-msg.obj `if test -f 'msg.c'; then $(CYGPATH_W) 'msg.c'; else $(CYGPATH_W) '$(srcdir)/msg.c'; fi`

corosync_qnetd-msgio.o: msgio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-msgio.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-msgio.Tpo -c -o corosync_qnetd-msgio.o `test -f 'msgio.c' || echo '$(srcdir)/'`msgio.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-msgio.Tpo $(DEPDIR)/corosync_qnetd-msgio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='msgio.c' object='corosync_qnetd-msgio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-msgio.o `test -f 'msgio.c' || echo '$(srcdir)/'`msgio.c

corosync_qnetd-msgio.obj: msgio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-msgio.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-msgio.Tpo -c -o corosync_qnetd-msgio.obj `if test -f 'msgio.c'; then $(CYGPATH_W) 'msgio.c'; else $(CYGPATH_W) '$(srcdir)/msgio.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-msgio.Tpo $(DEPDIR)/corosync_qnetd-msgio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='msgio.c' object='corosync_qnetd-msgio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-msgio.obj `if test -f 'msgio.c'; then $(CYGPATH_W) 'msgio.c'; else $(CYGPATH_W) '$(srcdir)/msgio.c'; fi`

corosync_qnetd-nss-sock.o: nss-sock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-nss-sock.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-nss-sock.Tpo -c -o corosync_qnetd-nss-sock.o `test -f 'nss-sock.c' || echo '$(srcdir)/'`nss-sock.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-nss-sock.Tpo $(DEPDIR)/corosync_qnetd-nss-sock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='nss-sock.c' object='corosync_qnetd-nss-sock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-nss-sock.o `test -f 'nss-sock.c' || echo '$(srcdir)/'`nss-sock.c

corosync_qnetd-nss-sock.obj: nss-sock.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-nss-sock.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-nss-sock.Tpo -c -o corosync_qnetd-nss-sock.obj `if test -f 'nss-sock.c'; then $(CYGPATH_W) 'nss-sock.c'; else $(CYGPATH_W) '$(srcdir)/nss-sock.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-nss-sock.Tpo $(DEPDIR)/corosync_qnetd-nss-sock.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='nss-sock.c' object='corosync_qnetd-nss-sock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-nss-sock.obj `if test -f 'nss-sock.c'; then $(CYGPATH_W) 'nss-sock.c'; else $(CYGPATH_W) '$(srcdir)/nss-sock.c'; fi`

corosync_qnetd-qnetd-client.o: qnetd-client.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-client.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-client.Tpo -c -o corosync_qnetd-qnetd-client.o `test -f 'qnetd-client.c' || echo '$(srcdir)/'`qnetd-client.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-client.Tpo $(DEPDIR)/corosync_qnetd-qnetd-client.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client.c' object='corosync_qnetd-qnetd-client.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-client.o `test -f 'qnetd-client.c' || echo '$(srcdir)/'`qnetd-client.c

corosync_qnetd-qnetd-client.obj: qnetd-client.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-client.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-client.Tpo -c -o corosync_qnetd-qnetd-client.obj `if test -f 'qnetd-client.c'; then $(CYGPATH_W) 'qnetd-client.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-client.Tpo $(DEPDIR)/corosync_qnetd-qnetd-client.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client.c' object='corosync_qnetd-qnetd-client.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-client.obj `if test -f 'qnetd-client.c'; then $(CYGPATH_W) 'qnetd-client.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client.c'; fi`

corosync_qnetd-qnetd-client-list.o: qnetd-client-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-client-list.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-client-list.Tpo -c -o corosync_qnetd-qnetd-client-list.o `test -f 'qnetd-client-list.c' || echo '$(srcdir)/'`qnetd-client-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-client-list.Tpo $(DEPDIR)/corosync_qnetd-qnetd-client-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client-list.c' object='corosync_qnetd-qnetd-client-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-client-list.o `test -f 'qnetd-client-list.c' || echo '$(srcdir)/'`qnetd-client-list.c

corosync_qnetd-qnetd-client-list.obj: qnetd-client-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-client-list.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-client-list.Tpo -c -o corosync_qnetd-qnetd-client-list.obj `if test -f 'qnetd-client-list.c'; then $(CYGPATH_W) 'qnetd-client-list.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-client-list.Tpo $(DEPDIR)/corosync_qnetd-qnetd-client-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client-list.c' object='corosync_qnetd-qnetd-client-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-client-list.obj `if test -f 'qnetd-client-list.c'; then $(CYGPATH_W) 'qnetd-client-list.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client-list.c'; fi`

corosync_qnetd-log.o: log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-log.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-log.Tpo -c -o corosync_qnetd-log.o `test -f 'log.c' || echo '$(srcdir)/'`log.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-log.Tpo $(DEPDIR)/corosync_qnetd-log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='log.c' object='corosync_qnetd-log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-log.o `test -f 'log.c' || echo '$(srcdir)/'`log.c

corosync_qnetd-log.obj: log.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-log.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-log.Tpo -c -o corosync_qnetd-log.obj `if test -f 'log.c'; then $(CYGPATH_W) 'log.c'; else $(CYGPATH_W) '$(srcdir)/log.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-log.Tpo $(DEPDIR)/corosync_qnetd-log.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='log.c' object='corosync_qnetd-log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-log.obj `if test -f 'log.c'; then $(CYGPATH_W) 'log.c'; else $(CYGPATH_W) '$(srcdir)/log.c'; fi`

corosync_qnetd-pr-poll-array.o: pr-poll-array.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-pr-poll-array.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-pr-poll-array.Tpo -c -o corosync_qnetd-pr-poll-array.o `test -f 'pr-poll-array.c' || echo '$(srcdir)/'`pr-poll-array.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-pr-poll-array.Tpo $(DEPDIR)/corosync_qnetd-pr-poll-array.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pr-poll-array.c' object='corosync_qnetd-pr-poll-array.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-pr-poll-array.o `test -f 'pr-poll-array.c' || echo '$(srcdir)/'`pr-poll-array.c

corosync_qnetd-pr-poll-array.obj: pr-poll-array.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-pr-poll-array.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-pr-poll-array.Tpo -c -o corosync_qnetd-pr-poll-array.obj `if test -f 'pr-poll-array.c'; then $(CYGPATH_W) 'pr-poll-array.c'; else $(CYGPATH_W) '$(srcdir)/pr-poll-array.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-pr-poll-array.Tpo $(DEPDIR)/corosync_qnetd-pr-poll-array.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pr-poll-array.c' object='corosync_qnetd-pr-poll-array.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-pr-poll-array.obj `if test -f 'pr-poll-array.c'; then $(CYGPATH_W) 'pr-poll-array.c'; else $(CYGPATH_W) '$(srcdir)/pr-poll-array.c'; fi`

corosync_qnetd-timer-list.o: timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-timer-list.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-timer-list.Tpo -c -o corosync_qnetd-timer-list.o `test -f 'timer-list.c' || echo '$(srcdir)/'`timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-timer-list.Tpo $(DEPDIR)/corosync_qnetd-timer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='timer-list.c' object='corosync_qnetd-timer-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-timer-list.o `test -f 'timer-list.c' || echo '$(srcdir)/'`timer-list.c

corosync_qnetd-timer-list.obj: timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-timer-list.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-timer-list.Tpo -c -o corosync_qnetd-timer-list.obj `if test -f 'timer-list.c'; then $(CYGPATH_W) 'timer-list.c'; else $(CYGPATH_W) '$(srcdir)/timer-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-timer-list.Tpo $(DEPDIR)/corosync_qnetd-timer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='timer-list.c' object='corosync_qnetd-timer-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-timer-list.obj `if test -f 'timer-list.c'; then $(CYGPATH_W) 'timer-list.c'; else $(CYGPATH_W) '$(srcdir)/timer-list.c'; fi`

corosync_qnetd-tlv.o: tlv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-tlv.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-tlv.Tpo -c -o corosync_qnetd-tlv.o `test -f 'tlv.c' || echo '$(srcdir)/'`tlv.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-tlv.Tpo $(DEPDIR)/corosync_qnetd-tlv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='tlv.c' object='corosync_qnetd-tlv.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-tlv.o `test -f 'tlv.c' || echo '$(srcdir)/'`tlv.c

corosync_qnetd-tlv.obj: tlv.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-tlv.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-tlv.Tpo -c -o corosync_qnetd-tlv.obj `if test -f 'tlv.c'; then $(CYGPATH_W) 'tlv.c'; else $(CYGPATH_W) '$(srcdir)/tlv.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-tlv.Tpo $(DEPDIR)/corosync_qnetd-tlv.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='tlv.c' object='corosync_qnetd-tlv.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-tlv.obj `if test -f 'tlv.c'; then $(CYGPATH_W) 'tlv.c'; else $(CYGPATH_W) '$(srcdir)/tlv.c'; fi`

corosync_qnetd-log-common.o: log-common.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-log-common.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-log-common.Tpo -c -o corosync_qnetd-log-common.o `test -f 'log-common.c' || echo '$(srcdir)/'`log-common.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-log-common.Tpo $(DEPDIR)/corosync_qnetd-log-common.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='log-common.c' object='corosync_qnetd-log-common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-log-common.o `test -f 'log-common.c' || echo '$(srcdir)/'`log-common.c

corosync_qnetd-log-common.obj: log-common.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-log-common.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-log-common.Tpo -c -o corosync_qnetd-log-common.obj `if test -f 'log-common.c'; then $(CYGPATH_W) 'log-common.c'; else $(CYGPATH_W) '$(srcdir)/log-common.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-log-common.Tpo $(DEPDIR)/corosync_qnetd-log-common.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='log-common.c' object='corosync_qnetd-log-common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-log-common.obj `if test -f 'log-common.c'; then $(CYGPATH_W) 'log-common.c'; else $(CYGPATH_W) '$(srcdir)/log-common.c'; fi`

corosync_qnetd-send-buffer-list.o: send-buffer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-send-buffer-list.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-send-buffer-list.Tpo -c -o corosync_qnetd-send-buffer-list.o `test -f 'send-buffer-list.c' || echo '$(srcdir)/'`send-buffer-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-send-buffer-list.Tpo $(DEPDIR)/corosync_qnetd-send-buffer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='send-buffer-list.c' object='corosync_qnetd-send-buffer-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-send-buffer-list.o `test -f 'send-buffer-list.c' || echo '$(srcdir)/'`send-buffer-list.c

corosync_qnetd-send-buffer-list.obj: send-buffer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-send-buffer-list.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-send-buffer-list.Tpo -c -o corosync_qnetd-send-buffer-list.obj `if test -f 'send-buffer-list.c'; then $(CYGPATH_W) 'send-buffer-list.c'; else $(CYGPATH_W) '$(srcdir)/send-buffer-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-send-buffer-list.Tpo $(DEPDIR)/corosync_qnetd-send-buffer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='send-buffer-list.c' object='corosync_qnetd-send-buffer-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-send-buffer-list.obj `if test -f 'send-buffer-list.c'; then $(CYGPATH_W) 'send-buffer-list.c'; else $(CYGPATH_W) '$(srcdir)/send-buffer-list.c'; fi`

corosync_qnetd-node-list.o: node-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-node-list.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-node-list.Tpo -c -o corosync_qnetd-node-list.o `test -f 'node-list.c' || echo '$(srcdir)/'`node-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-node-list.Tpo $(DEPDIR)/corosync_qnetd-node-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='node-list.c' object='corosync_qnetd-node-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-node-list.o `test -f 'node-list.c' || echo '$(srcdir)/'`node-list.c

corosync_qnetd-node-list.obj: node-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-node-list.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-node-list.Tpo -c -o corosync_qnetd-node-list.obj `if test -f 'node-list.c'; then $(CYGPATH_W) 'node-list.c'; else $(CYGPATH_W) '$(srcdir)/node-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-node-list.Tpo $(DEPDIR)/corosync_qnetd-node-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='node-list.c' object='corosync_qnetd-node-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-node-list.obj `if test -f 'node-list.c'; then $(CYGPATH_W) 'node-list.c'; else $(CYGPATH_W) '$(srcdir)/node-list.c'; fi`

corosync_qnetd-qnetd-algo-test.o: qnetd-algo-test.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-algo-test.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-algo-test.Tpo -c -o corosync_qnetd-qnetd-algo-test.o `test -f 'qnetd-algo-test.c' || echo '$(srcdir)/'`qnetd-algo-test.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-algo-test.Tpo $(DEPDIR)/corosync_qnetd-qnetd-algo-test.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-algo-test.c' object='corosync_qnetd-qnetd-algo-test.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-algo-test.o `test -f 'qnetd-algo-test.c' || echo '$(srcdir)/'`qnetd-algo-test.c

corosync_qnetd-qnetd-algo-test.obj: qnetd-algo-test.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-algo-test.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-algo-test.Tpo -c -o corosync_qnetd-qnetd-algo-test.obj `if test -f 'qnetd-algo-test.c'; then $(CYGPATH_W) 'qnetd-algo-test.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-algo-test.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-algo-test.Tpo $(DEPDIR)/corosync_qnetd-qnetd-algo-test.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-algo-test.c' object='corosync_qnetd-qnetd-algo-test.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-algo-test.obj `if test -f 'qnetd-algo-test.c'; then $(CYGPATH_W) 'qnetd-algo-test.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-algo-test.c'; fi`

corosync_qnetd-qnetd-algorithm.o: qnetd-algorithm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-algorithm.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-algorithm.Tpo -c -o corosync_qnetd-qnetd-algorithm.o `test -f 'qnetd-algorithm.c' || echo '$(srcdir)/'`qnetd-algorithm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-algorithm.Tpo $(DEPDIR)/corosync_qnetd-qnetd-algorithm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-algorithm.c' object='corosync_qnetd-qnetd-algorithm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-algorithm.o `test -f 'qnetd-algorithm.c' || echo '$(srcdir)/'`qnetd-algorithm.c

corosync_qnetd-qnetd-algorithm.obj: qnetd-algorithm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-algorithm.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-algorithm.Tpo -c -o corosync_qnetd-qnetd-algorithm.obj `if test -f 'qnetd-algorithm.c'; then $(CYGPATH_W) 'qnetd-algorithm.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-algorithm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-algorithm.Tpo $(DEPDIR)/corosync_qnetd-qnetd-algorithm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-algorithm.c' object='corosync_qnetd-qnetd-algorithm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-algorithm.obj `if test -f 'qnetd-algorithm.c'; then $(CYGPATH_W) 'qnetd-algorithm.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-algorithm.c'; fi`

corosync_qnetd-qnetd-algo-utils.o: qnetd-algo-utils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-algo-utils.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-algo-utils.Tpo -c -o corosync_qnetd-qnetd-algo-utils.o `test -f 'qnetd-algo-utils.c' || echo '$(srcdir)/'`qnetd-algo-utils.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-algo-utils.Tpo $(DEPDIR)/corosync_qnetd-qnetd-algo-utils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-algo-utils.c' object='corosync_qnetd-qnetd-algo-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-algo-utils.o `test -f 'qnetd-algo-utils.c' || echo '$(srcdir)/'`qnetd-algo-utils.c

corosync_qnetd-qnetd-algo-utils.obj: qnetd-algo-utils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-algo-utils.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-algo-utils.Tpo -c -o corosync_qnetd-qnetd-algo-utils.obj `if test -f 'qnetd-algo-utils.c'; then $(CYGPATH_W) 'qnetd-algo-utils.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-algo-utils.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-algo-utils.Tpo $(DEPDIR)/corosync_qnetd-qnetd-algo-utils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-algo-utils.c' object='corosync_qnetd-qnetd-algo-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-algo-utils.obj `if test -f 'qnetd-algo-utils.c'; then $(CYGPATH_W) 'qnetd-algo-utils.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-algo-utils.c'; fi`

corosync_qnetd-qnetd-algo-ffsplit.o: qnetd-algo-ffsplit.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-algo-ffsplit.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-algo-ffsplit.Tpo -c -o corosync_qnetd-qnetd-algo-ffsplit.o `test -f 'qnetd-algo-ffsplit.c' || echo '$(srcdir)/'`qnetd-algo-ffsplit.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-algo-ffsplit.Tpo $(DEPDIR)/corosync_qnetd-qnetd-algo-ffsplit.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-algo-ffsplit.c' object='corosync_qnetd-qnetd-algo-ffsplit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-algo-ffsplit.o `test -f 'qnetd-algo-ffsplit.c' || echo '$(srcdir)/'`qnetd-algo-ffsplit.c

corosync_qnetd-qnetd-algo-ffsplit.obj: qnetd-algo-ffsplit.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-algo-ffsplit.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-algo-ffsplit.Tpo -c -o corosync_qnetd-qnetd-algo-ffsplit.obj `if test -f 'qnetd-algo-ffsplit.c'; then $(CYGPATH_W) 'qnetd-algo-ffsplit.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-algo-ffsplit.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-algo-ffsplit.Tpo $(DEPDIR)/corosync_qnetd-qnetd-algo-ffsplit.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-algo-ffsplit.c' object='corosync_qnetd-qnetd-algo-ffsplit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-algo-ffsplit.obj `if test -f 'qnetd-algo-ffsplit.c'; then $(CYGPATH_W) 'qnetd-algo-ffsplit.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-algo-ffsplit.c'; fi`

corosync_qnetd-qnetd-cluster.o: qnetd-cluster.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-cluster.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-cluster.Tpo -c -o corosync_qnetd-qnetd-cluster.o `test -f 'qnetd-cluster.c' || echo '$(srcdir)/'`qnetd-cluster.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-cluster.Tpo $(DEPDIR)/corosync_qnetd-qnetd-cluster.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-cluster.c' object='corosync_qnetd-qnetd-cluster.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-cluster.o `test -f 'qnetd-cluster.c' || echo '$(srcdir)/'`qnetd-cluster.c

corosync_qnetd-qnetd-cluster.obj: qnetd-cluster.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-cluster.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-cluster.Tpo -c -o corosync_qnetd-qnetd-cluster.obj `if test -f 'qnetd-cluster.c'; then $(CYGPATH_W) 'qnetd-cluster.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-cluster.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-cluster.Tpo $(DEPDIR)/corosync_qnetd-qnetd-cluster.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-cluster.c' object='corosync_qnetd-qnetd-cluster.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-cluster.obj `if test -f 'qnetd-cluster.c'; then $(CYGPATH_W) 'qnetd-cluster.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-cluster.c'; fi`

corosync_qnetd-qnetd-cluster-list.o: qnetd-cluster-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-cluster-list.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-cluster-list.Tpo -c -o corosync_qnetd-qnetd-cluster-list.o `test -f 'qnetd-cluster-list.c' || echo '$(srcdir)/'`qnetd-cluster-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-cluster-list.Tpo $(DEPDIR)/corosync_qnetd-qnetd-cluster-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-cluster-list.c' object='corosync_qnetd-qnetd-cluster-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-cluster-list.o `test -f 'qnetd-cluster-list.c' || echo '$(srcdir)/'`qnetd-cluster-list.c

corosync_qnetd-qnetd-cluster-list.obj: qnetd-cluster-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-cluster-list.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-cluster-list.Tpo -c -o corosync_qnetd-qnetd-cluster-list.obj `if test -f 'qnetd-cluster-list.c'; then $(CYGPATH_W) 'qnetd-cluster-list.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-cluster-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-cluster-list.Tpo $(DEPDIR)/corosync_qnetd-qnetd-cluster-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-cluster-list.c' object='corosync_qnetd-qnetd-cluster-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-cluster-list.obj `if test -f 'qnetd-cluster-list.c'; then $(CYGPATH_W) 'qnetd-cluster-list.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-cluster-list.c'; fi`

corosync_qnetd-qnetd-client-send.o: qnetd-client-send.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-client-send.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-client-send.Tpo -c -o corosync_qnetd-qnetd-client-send.o `test -f 'qnetd-client-send.c' || echo '$(srcdir)/'`qnetd-client-send.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-client-send.Tpo $(DEPDIR)/corosync_qnetd-qnetd-client-send.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client-send.c' object='corosync_qnetd-qnetd-client-send.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-client-send.o `test -f 'qnetd-client-send.c' || echo '$(srcdir)/'`qnetd-client-send.c

corosync_qnetd-qnetd-client-send.obj: qnetd-client-send.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-client-send.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-client-send.Tpo -c -o corosync_qnetd-qnetd-client-send.obj `if test -f 'qnetd-client-send.c'; then $(CYGPATH_W) 'qnetd-client-send.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client-send.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-client-send.Tpo $(DEPDIR)/corosync_qnetd-qnetd-client-send.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client-send.c' object='corosync_qnetd-qnetd-client-send.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-client-send.obj `if test -f 'qnetd-client-send.c'; then $(CYGPATH_W) 'qnetd-client-send.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client-send.c'; fi`

corosync_qnetd-qnetd-algo-2nodelms.o: qnetd-algo-2nodelms.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-algo-2nodelms.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-algo-2nodelms.Tpo -c -o corosync_qnetd-qnetd-algo-2nodelms.o `test -f 'qnetd-algo-2nodelms.c' || echo '$(srcdir)/'`qnetd-algo-2nodelms.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-algo-2nodelms.Tpo $(DEPDIR)/corosync_qnetd-qnetd-algo-2nodelms.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-algo-2nodelms.c' object='corosync_qnetd-qnetd-algo-2nodelms.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-algo-2nodelms.o `test -f 'qnetd-algo-2nodelms.c' || echo '$(srcdir)/'`qnetd-algo-2nodelms.c

corosync_qnetd-qnetd-algo-2nodelms.obj: qnetd-algo-2nodelms.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-algo-2nodelms.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-algo-2nodelms.Tpo -c -o corosync_qnetd-qnetd-algo-2nodelms.obj `if test -f 'qnetd-algo-2nodelms.c'; then $(CYGPATH_W) 'qnetd-algo-2nodelms.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-algo-2nodelms.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-algo-2nodelms.Tpo $(DEPDIR)/corosync_qnetd-qnetd-algo-2nodelms.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-algo-2nodelms.c' object='corosync_qnetd-qnetd-algo-2nodelms.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-algo-2nodelms.obj `if test -f 'qnetd-algo-2nodelms.c'; then $(CYGPATH_W) 'qnetd-algo-2nodelms.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-algo-2nodelms.c'; fi`

corosync_qnetd-qnetd-algo-lms.o: qnetd-algo-lms.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-algo-lms.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-algo-lms.Tpo -c -o corosync_qnetd-qnetd-algo-lms.o `test -f 'qnetd-algo-lms.c' || echo '$(srcdir)/'`qnetd-algo-lms.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-algo-lms.Tpo $(DEPDIR)/corosync_qnetd-qnetd-algo-lms.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-algo-lms.c' object='corosync_qnetd-qnetd-algo-lms.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-algo-lms.o `test -f 'qnetd-algo-lms.c' || echo '$(srcdir)/'`qnetd-algo-lms.c

corosync_qnetd-qnetd-algo-lms.obj: qnetd-algo-lms.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-algo-lms.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-algo-lms.Tpo -c -o corosync_qnetd-qnetd-algo-lms.obj `if test -f 'qnetd-algo-lms.c'; then $(CYGPATH_W) 'qnetd-algo-lms.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-algo-lms.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-algo-lms.Tpo $(DEPDIR)/corosync_qnetd-qnetd-algo-lms.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-algo-lms.c' object='corosync_qnetd-qnetd-algo-lms.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-algo-lms.obj `if test -f 'qnetd-algo-lms.c'; then $(CYGPATH_W) 'qnetd-algo-lms.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-algo-lms.c'; fi`

corosync_qnetd-utils.o: utils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-utils.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-utils.Tpo -c -o corosync_qnetd-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-utils.Tpo $(DEPDIR)/corosync_qnetd-utils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='utils.c' object='corosync_qnetd-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-utils.o `test -f 'utils.c' || echo '$(srcdir)/'`utils.c

corosync_qnetd-utils.obj: utils.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-utils.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-utils.Tpo -c -o corosync_qnetd-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-utils.Tpo $(DEPDIR)/corosync_qnetd-utils.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='utils.c' object='corosync_qnetd-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-utils.obj `if test -f 'utils.c'; then $(CYGPATH_W) 'utils.c'; else $(CYGPATH_W) '$(srcdir)/utils.c'; fi`

corosync_qnetd-qnetd-instance.o: qnetd-instance.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-instance.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-instance.Tpo -c -o corosync_qnetd-qnetd-instance.o `test -f 'qnetd-instance.c' || echo '$(srcdir)/'`qnetd-instance.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-instance.Tpo $(DEPDIR)/corosync_qnetd-qnetd-instance.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-instance.c' object='corosync_qnetd-qnetd-instance.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-instance.o `test -f 'qnetd-instance.c' || echo '$(srcdir)/'`qnetd-instance.c

corosync_qnetd-qnetd-instance.obj: qnetd-instance.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-instance.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-instance.Tpo -c -o corosync_qnetd-qnetd-instance.obj `if test -f 'qnetd-instance.c'; then $(CYGPATH_W) 'qnetd-instance.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-instance.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-instance.Tpo $(DEPDIR)/corosync_qnetd-qnetd-instance.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-instance.c' object='corosync_qnetd-qnetd-instance.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-instance.obj `if test -f 'qnetd-instance.c'; then $(CYGPATH_W) 'qnetd-instance.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-instance.c'; fi`

corosync_qnetd-qnetd-client-net.o: qnetd-client-net.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-client-net.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-client-net.Tpo -c -o corosync_qnetd-qnetd-client-net.o `test -f 'qnetd-client-net.c' || echo '$(srcdir)/'`qnetd-client-net.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-client-net.Tpo $(DEPDIR)/corosync_qnetd-qnetd-client-net.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client-net.c' object='corosync_qnetd-qnetd-client-net.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-client-net.o `test -f 'qnetd-client-net.c' || echo '$(srcdir)/'`qnetd-client-net.c

corosync_qnetd-qnetd-client-net.obj: qnetd-client-net.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-client-net.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-client-net.Tpo -c -o corosync_qnetd-qnetd-client-net.obj `if test -f 'qnetd-client-net.c'; then $(CYGPATH_W) 'qnetd-client-net.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client-net.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-client-net.Tpo $(DEPDIR)/corosync_qnetd-qnetd-client-net.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client-net.c' object='corosync_qnetd-qnetd-client-net.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-client-net.obj `if test -f 'qnetd-client-net.c'; then $(CYGPATH_W) 'qnetd-client-net.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client-net.c'; fi`

corosync_qnetd-qnetd-client-msg-received.o: qnetd-client-msg-received.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-client-msg-received.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-client-msg-received.Tpo -c -o corosync_qnetd-qnetd-client-msg-received.o `test -f 'qnetd-client-msg-received.c' || echo '$(srcdir)/'`qnetd-client-msg-received.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-client-msg-received.Tpo $(DEPDIR)/corosync_qnetd-qnetd-client-msg-received.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client-msg-received.c' object='corosync_qnetd-qnetd-client-msg-received.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-client-msg-received.o `test -f 'qnetd-client-msg-received.c' || echo '$(srcdir)/'`qnetd-client-msg-received.c

corosync_qnetd-qnetd-client-msg-received.obj: qnetd-client-msg-received.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-client-msg-received.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-client-msg-received.Tpo -c -o corosync_qnetd-qnetd-client-msg-received.obj `if test -f 'qnetd-client-msg-received.c'; then $(CYGPATH_W) 'qnetd-client-msg-received.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client-msg-received.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-client-msg-received.Tpo $(DEPDIR)/corosync_qnetd-qnetd-client-msg-received.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client-msg-received.c' object='corosync_qnetd-qnetd-client-msg-received.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-client-msg-received.obj `if test -f 'qnetd-client-msg-received.c'; then $(CYGPATH_W) 'qnetd-client-msg-received.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client-msg-received.c'; fi`

corosync_qnetd-qnetd-log-debug.o: qnetd-log-debug.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-log-debug.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-log-debug.Tpo -c -o corosync_qnetd-qnetd-log-debug.o `test -f 'qnetd-log-debug.c' || echo '$(srcdir)/'`qnetd-log-debug.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-log-debug.Tpo $(DEPDIR)/corosync_qnetd-qnetd-log-debug.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-log-debug.c' object='corosync_qnetd-qnetd-log-debug.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-log-debug.o `test -f 'qnetd-log-debug.c' || echo '$(srcdir)/'`qnetd-log-debug.c

corosync_qnetd-qnetd-log-debug.obj: qnetd-log-debug.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-log-debug.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-log-debug.Tpo -c -o corosync_qnetd-qnetd-log-debug.obj `if test -f 'qnetd-log-debug.c'; then $(CYGPATH_W) 'qnetd-log-debug.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-log-debug.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-log-debug.Tpo $(DEPDIR)/corosync_qnetd-qnetd-log-debug.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-log-debug.c' object='corosync_qnetd-qnetd-log-debug.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-log-debug.obj `if test -f 'qnetd-log-debug.c'; then $(CYGPATH_W) 'qnetd-log-debug.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-log-debug.c'; fi`

corosync_qnetd-qnetd-client-algo-timer.o: qnetd-client-algo-timer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-client-algo-timer.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-client-algo-timer.Tpo -c -o corosync_qnetd-qnetd-client-algo-timer.o `test -f 'qnetd-client-algo-timer.c' || echo '$(srcdir)/'`qnetd-client-algo-timer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-client-algo-timer.Tpo $(DEPDIR)/corosync_qnetd-qnetd-client-algo-timer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client-algo-timer.c' object='corosync_qnetd-qnetd-client-algo-timer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-client-algo-timer.o `test -f 'qnetd-client-algo-timer.c' || echo '$(srcdir)/'`qnetd-client-algo-timer.c

corosync_qnetd-qnetd-client-algo-timer.obj: qnetd-client-algo-timer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-client-algo-timer.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-client-algo-timer.Tpo -c -o corosync_qnetd-qnetd-client-algo-timer.obj `if test -f 'qnetd-client-algo-timer.c'; then $(CYGPATH_W) 'qnetd-client-algo-timer.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client-algo-timer.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-client-algo-timer.Tpo $(DEPDIR)/corosync_qnetd-qnetd-client-algo-timer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client-algo-timer.c' object='corosync_qnetd-qnetd-client-algo-timer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-client-algo-timer.obj `if test -f 'qnetd-client-algo-timer.c'; then $(CYGPATH_W) 'qnetd-client-algo-timer.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client-algo-timer.c'; fi`

corosync_qnetd-qnetd-client-dpd-timer.o: qnetd-client-dpd-timer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-client-dpd-timer.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-client-dpd-timer.Tpo -c -o corosync_qnetd-qnetd-client-dpd-timer.o `test -f 'qnetd-client-dpd-timer.c' || echo '$(srcdir)/'`qnetd-client-dpd-timer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-client-dpd-timer.Tpo $(DEPDIR)/corosync_qnetd-qnetd-client-dpd-timer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client-dpd-timer.c' object='corosync_qnetd-qnetd-client-dpd-timer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-client-dpd-timer.o `test -f 'qnetd-client-dpd-timer.c' || echo '$(srcdir)/'`qnetd-client-dpd-timer.c

corosync_qnetd-qnetd-client-dpd-timer.obj: qnetd-client-dpd-timer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-client-dpd-timer.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-client-dpd-timer.Tpo -c -o corosync_qnetd-qnetd-client-dpd-timer.obj `if test -f 'qnetd-client-dpd-timer.c'; then $(CYGPATH_W) 'qnetd-client-dpd-timer.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client-dpd-timer.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-client-dpd-timer.Tpo $(DEPDIR)/corosync_qnetd-qnetd-client-dpd-timer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client-dpd-timer.c' object='corosync_qnetd-qnetd-client-dpd-timer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-client-dpd-timer.obj `if test -f 'qnetd-client-dpd-timer.c'; then $(CYGPATH_W) 'qnetd-client-dpd-timer.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client-dpd-timer.c'; fi`

corosync_qnetd-qnetd-ipc.o: qnetd-ipc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-ipc.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-ipc.Tpo -c -o corosync_qnetd-qnetd-ipc.o `test -f 'qnetd-ipc.c' || echo '$(srcdir)/'`qnetd-ipc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-ipc.Tpo $(DEPDIR)/corosync_qnetd-qnetd-ipc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-ipc.c' object='corosync_qnetd-qnetd-ipc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-ipc.o `test -f 'qnetd-ipc.c' || echo '$(srcdir)/'`qnetd-ipc.c

corosync_qnetd-qnetd-ipc.obj: qnetd-ipc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-ipc.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-ipc.Tpo -c -o corosync_qnetd-qnetd-ipc.obj `if test -f 'qnetd-ipc.c'; then $(CYGPATH_W) 'qnetd-ipc.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-ipc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-ipc.Tpo $(DEPDIR)/corosync_qnetd-qnetd-ipc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-ipc.c' object='corosync_qnetd-qnetd-ipc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-ipc.obj `if test -f 'qnetd-ipc.c'; then $(CYGPATH_W) 'qnetd-ipc.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-ipc.c'; fi`

corosync_qnetd-unix-socket-ipc.o: unix-socket-ipc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-unix-socket-ipc.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-unix-socket-ipc.Tpo -c -o corosync_qnetd-unix-socket-ipc.o `test -f 'unix-socket-ipc.c' || echo '$(srcdir)/'`unix-socket-ipc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-unix-socket-ipc.Tpo $(DEPDIR)/corosync_qnetd-unix-socket-ipc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket-ipc.c' object='corosync_qnetd-unix-socket-ipc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-unix-socket-ipc.o `test -f 'unix-socket-ipc.c' || echo '$(srcdir)/'`unix-socket-ipc.c

corosync_qnetd-unix-socket-ipc.obj: unix-socket-ipc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-unix-socket-ipc.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-unix-socket-ipc.Tpo -c -o corosync_qnetd-unix-socket-ipc.obj `if test -f 'unix-socket-ipc.c'; then $(CYGPATH_W) 'unix-socket-ipc.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket-ipc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-unix-socket-ipc.Tpo $(DEPDIR)/corosync_qnetd-unix-socket-ipc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket-ipc.c' object='corosync_qnetd-unix-socket-ipc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-unix-socket-ipc.obj `if test -f 'unix-socket-ipc.c'; then $(CYGPATH_W) 'unix-socket-ipc.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket-ipc.c'; fi`

corosync_qnetd-dynar-simple-lex.o: dynar-simple-lex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-dynar-simple-lex.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-dynar-simple-lex.Tpo -c -o corosync_qnetd-dynar-simple-lex.o `test -f 'dynar-simple-lex.c' || echo '$(srcdir)/'`dynar-simple-lex.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-dynar-simple-lex.Tpo $(DEPDIR)/corosync_qnetd-dynar-simple-lex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar-simple-lex.c' object='corosync_qnetd-dynar-simple-lex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-dynar-simple-lex.o `test -f 'dynar-simple-lex.c' || echo '$(srcdir)/'`dynar-simple-lex.c

corosync_qnetd-dynar-simple-lex.obj: dynar-simple-lex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-dynar-simple-lex.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-dynar-simple-lex.Tpo -c -o corosync_qnetd-dynar-simple-lex.obj `if test -f 'dynar-simple-lex.c'; then $(CYGPATH_W) 'dynar-simple-lex.c'; else $(CYGPATH_W) '$(srcdir)/dynar-simple-lex.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-dynar-simple-lex.Tpo $(DEPDIR)/corosync_qnetd-dynar-simple-lex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar-simple-lex.c' object='corosync_qnetd-dynar-simple-lex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-dynar-simple-lex.obj `if test -f 'dynar-simple-lex.c'; then $(CYGPATH_W) 'dynar-simple-lex.c'; else $(CYGPATH_W) '$(srcdir)/dynar-simple-lex.c'; fi`

corosync_qnetd-dynar-str.o: dynar-str.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-dynar-str.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-dynar-str.Tpo -c -o corosync_qnetd-dynar-str.o `test -f 'dynar-str.c' || echo '$(srcdir)/'`dynar-str.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-dynar-str.Tpo $(DEPDIR)/corosync_qnetd-dynar-str.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar-str.c' object='corosync_qnetd-dynar-str.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-dynar-str.o `test -f 'dynar-str.c' || echo '$(srcdir)/'`dynar-str.c

corosync_qnetd-dynar-str.obj: dynar-str.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-dynar-str.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-dynar-str.Tpo -c -o corosync_qnetd-dynar-str.obj `if test -f 'dynar-str.c'; then $(CYGPATH_W) 'dynar-str.c'; else $(CYGPATH_W) '$(srcdir)/dynar-str.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-dynar-str.Tpo $(DEPDIR)/corosync_qnetd-dynar-str.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar-str.c' object='corosync_qnetd-dynar-str.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-dynar-str.obj `if test -f 'dynar-str.c'; then $(CYGPATH_W) 'dynar-str.c'; else $(CYGPATH_W) '$(srcdir)/dynar-str.c'; fi`

corosync_qnetd-unix-socket-client.o: unix-socket-client.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-unix-socket-client.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-unix-socket-client.Tpo -c -o corosync_qnetd-unix-socket-client.o `test -f 'unix-socket-client.c' || echo '$(srcdir)/'`unix-socket-client.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-unix-socket-client.Tpo $(DEPDIR)/corosync_qnetd-unix-socket-client.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket-client.c' object='corosync_qnetd-unix-socket-client.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-unix-socket-client.o `test -f 'unix-socket-client.c' || echo '$(srcdir)/'`unix-socket-client.c

corosync_qnetd-unix-socket-client.obj: unix-socket-client.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-unix-socket-client.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-unix-socket-client.Tpo -c -o corosync_qnetd-unix-socket-client.obj `if test -f 'unix-socket-client.c'; then $(CYGPATH_W) 'unix-socket-client.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket-client.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-unix-socket-client.Tpo $(DEPDIR)/corosync_qnetd-unix-socket-client.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket-client.c' object='corosync_qnetd-unix-socket-client.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-unix-socket-client.obj `if test -f 'unix-socket-client.c'; then $(CYGPATH_W) 'unix-socket-client.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket-client.c'; fi`

corosync_qnetd-unix-socket-client-list.o: unix-socket-client-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-unix-socket-client-list.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-unix-socket-client-list.Tpo -c -o corosync_qnetd-unix-socket-client-list.o `test -f 'unix-socket-client-list.c' || echo '$(srcdir)/'`unix-socket-client-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-unix-socket-client-list.Tpo $(DEPDIR)/corosync_qnetd-unix-socket-client-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket-client-list.c' object='corosync_qnetd-unix-socket-client-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-unix-socket-client-list.o `test -f 'unix-socket-client-list.c' || echo '$(srcdir)/'`unix-socket-client-list.c

corosync_qnetd-unix-socket-client-list.obj: unix-socket-client-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-unix-socket-client-list.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-unix-socket-client-list.Tpo -c -o corosync_qnetd-unix-socket-client-list.obj `if test -f 'unix-socket-client-list.c'; then $(CYGPATH_W) 'unix-socket-client-list.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket-client-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-unix-socket-client-list.Tpo $(DEPDIR)/corosync_qnetd-unix-socket-client-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket-client-list.c' object='corosync_qnetd-unix-socket-client-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-unix-socket-client-list.obj `if test -f 'unix-socket-client-list.c'; then $(CYGPATH_W) 'unix-socket-client-list.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket-client-list.c'; fi`

corosync_qnetd-unix-socket.o: unix-socket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-unix-socket.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-unix-socket.Tpo -c -o corosync_qnetd-unix-socket.o `test -f 'unix-socket.c' || echo '$(srcdir)/'`unix-socket.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-unix-socket.Tpo $(DEPDIR)/corosync_qnetd-unix-socket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket.c' object='corosync_qnetd-unix-socket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-unix-socket.o `test -f 'unix-socket.c' || echo '$(srcdir)/'`unix-socket.c

corosync_qnetd-unix-socket.obj: unix-socket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-unix-socket.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-unix-socket.Tpo -c -o corosync_qnetd-unix-socket.obj `if test -f 'unix-socket.c'; then $(CYGPATH_W) 'unix-socket.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-unix-socket.Tpo $(DEPDIR)/corosync_qnetd-unix-socket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='unix-socket.c' object='corosync_qnetd-unix-socket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-unix-socket.obj `if test -f 'unix-socket.c'; then $(CYGPATH_W) 'unix-socket.c'; else $(CYGPATH_W) '$(srcdir)/unix-socket.c'; fi`

corosync_qnetd-qnetd-ipc-cmd.o: qnetd-ipc-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-ipc-cmd.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-ipc-cmd.Tpo -c -o corosync_qnetd-qnetd-ipc-cmd.o `test -f 'qnetd-ipc-cmd.c' || echo '$(srcdir)/'`qnetd-ipc-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-ipc-cmd.Tpo $(DEPDIR)/corosync_qnetd-qnetd-ipc-cmd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-ipc-cmd.c' object='corosync_qnetd-qnetd-ipc-cmd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-ipc-cmd.o `test -f 'qnetd-ipc-cmd.c' || echo '$(srcdir)/'`qnetd-ipc-cmd.c

corosync_qnetd-qnetd-ipc-cmd.obj: qnetd-ipc-cmd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-ipc-cmd.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-ipc-cmd.Tpo -c -o corosync_qnetd-qnetd-ipc-cmd.obj `if test -f 'qnetd-ipc-cmd.c'; then $(CYGPATH_W) 'qnetd-ipc-cmd.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-ipc-cmd.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-ipc-cmd.Tpo $(DEPDIR)/corosync_qnetd-qnetd-ipc-cmd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-ipc-cmd.c' object='corosync_qnetd-qnetd-ipc-cmd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-ipc-cmd.obj `if test -f 'qnetd-ipc-cmd.c'; then $(CYGPATH_W) 'qnetd-ipc-cmd.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-ipc-cmd.c'; fi`

corosync_qnetd-dynar-getopt-lex.o: dynar-getopt-lex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-dynar-getopt-lex.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-dynar-getopt-lex.Tpo -c -o corosync_qnetd-dynar-getopt-lex.o `test -f 'dynar-getopt-lex.c' || echo '$(srcdir)/'`dynar-getopt-lex.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-dynar-getopt-lex.Tpo $(DEPDIR)/corosync_qnetd-dynar-getopt-lex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar-getopt-lex.c' object='corosync_qnetd-dynar-getopt-lex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-dynar-getopt-lex.o `test -f 'dynar-getopt-lex.c' || echo '$(srcdir)/'`dynar-getopt-lex.c

corosync_qnetd-dynar-getopt-lex.obj: dynar-getopt-lex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-dynar-getopt-lex.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-dynar-getopt-lex.Tpo -c -o corosync_qnetd-dynar-getopt-lex.obj `if test -f 'dynar-getopt-lex.c'; then $(CYGPATH_W) 'dynar-getopt-lex.c'; else $(CYGPATH_W) '$(srcdir)/dynar-getopt-lex.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-dynar-getopt-lex.Tpo $(DEPDIR)/corosync_qnetd-dynar-getopt-lex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar-getopt-lex.c' object='corosync_qnetd-dynar-getopt-lex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-dynar-getopt-lex.obj `if test -f 'dynar-getopt-lex.c'; then $(CYGPATH_W) 'dynar-getopt-lex.c'; else $(CYGPATH_W) '$(srcdir)/dynar-getopt-lex.c'; fi`

corosync_qnetd-qnetd-advanced-settings.o: qnetd-advanced-settings.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-advanced-settings.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-advanced-settings.Tpo -c -o corosync_qnetd-qnetd-advanced-settings.o `test -f 'qnetd-advanced-settings.c' || echo '$(srcdir)/'`qnetd-advanced-settings.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-advanced-settings.Tpo $(DEPDIR)/corosync_qnetd-qnetd-advanced-settings.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-advanced-settings.c' object='corosync_qnetd-qnetd-advanced-settings.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-advanced-settings.o `test -f 'qnetd-advanced-settings.c' || echo '$(srcdir)/'`qnetd-advanced-settings.c

corosync_qnetd-qnetd-advanced-settings.obj: qnetd-advanced-settings.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-qnetd-advanced-settings.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-qnetd-advanced-settings.Tpo -c -o corosync_qnetd-qnetd-advanced-settings.obj `if test -f 'qnetd-advanced-settings.c'; then $(CYGPATH_W) 'qnetd-advanced-settings.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-advanced-settings.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-qnetd-advanced-settings.Tpo $(DEPDIR)/corosync_qnetd-qnetd-advanced-settings.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-advanced-settings.c' object='corosync_qnetd-qnetd-advanced-settings.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-qnetd-advanced-settings.obj `if test -f 'qnetd-advanced-settings.c'; then $(CYGPATH_W) 'qnetd-advanced-settings.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-advanced-settings.c'; fi`

corosync_qnetd-pr-poll-loop.o: pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-pr-poll-loop.o -MD -MP -MF $(DEPDIR)/corosync_qnetd-pr-poll-loop.Tpo -c -o corosync_qnetd-pr-poll-loop.o `test -f 'pr-poll-loop.c' || echo '$(srcdir)/'`pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-pr-poll-loop.Tpo $(DEPDIR)/corosync_qnetd-pr-poll-loop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pr-poll-loop.c' object='corosync_qnetd-pr-poll-loop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-pr-poll-loop.o `test -f 'pr-poll-loop.c' || echo '$(srcdir)/'`pr-poll-loop.c

corosync_qnetd-pr-poll-loop.obj: pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -MT corosync_qnetd-pr-poll-loop.obj -MD -MP -MF $(DEPDIR)/corosync_qnetd-pr-poll-loop.Tpo -c -o corosync_qnetd-pr-poll-loop.obj `if test -f 'pr-poll-loop.c'; then $(CYGPATH_W) 'pr-poll-loop.c'; else $(CYGPATH_W) '$(srcdir)/pr-poll-loop.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/corosync_qnetd-pr-poll-loop.Tpo $(DEPDIR)/corosync_qnetd-pr-poll-loop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pr-poll-loop.c' object='corosync_qnetd-pr-poll-loop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(corosync_qnetd_CFLAGS) $(CFLAGS) -c -o corosync_qnetd-pr-poll-loop.obj `if test -f 'pr-poll-loop.c'; then $(CYGPATH_W) 'pr-poll-loop.c'; else $(CYGPATH_W) '$(srcdir)/pr-poll-loop.c'; fi`

pr_poll_loop_test-test-pr-poll-loop.o: test-pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -MT pr_poll_loop_test-test-pr-poll-loop.o -MD -MP -MF $(DEPDIR)/pr_poll_loop_test-test-pr-poll-loop.Tpo -c -o pr_poll_loop_test-test-pr-poll-loop.o `test -f 'test-pr-poll-loop.c' || echo '$(srcdir)/'`test-pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/pr_poll_loop_test-test-pr-poll-loop.Tpo $(DEPDIR)/pr_poll_loop_test-test-pr-poll-loop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test-pr-poll-loop.c' object='pr_poll_loop_test-test-pr-poll-loop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -c -o pr_poll_loop_test-test-pr-poll-loop.o `test -f 'test-pr-poll-loop.c' || echo '$(srcdir)/'`test-pr-poll-loop.c

pr_poll_loop_test-test-pr-poll-loop.obj: test-pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -MT pr_poll_loop_test-test-pr-poll-loop.obj -MD -MP -MF $(DEPDIR)/pr_poll_loop_test-test-pr-poll-loop.Tpo -c -o pr_poll_loop_test-test-pr-poll-loop.obj `if test -f 'test-pr-poll-loop.c'; then $(CYGPATH_W) 'test-pr-poll-loop.c'; else $(CYGPATH_W) '$(srcdir)/test-pr-poll-loop.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/pr_poll_loop_test-test-pr-poll-loop.Tpo $(DEPDIR)/pr_poll_loop_test-test-pr-poll-loop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test-pr-poll-loop.c' object='pr_poll_loop_test-test-pr-poll-loop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -c -o pr_poll_loop_test-test-pr-poll-loop.obj `if test -f 'test-pr-poll-loop.c'; then $(CYGPATH_W) 'test-pr-poll-loop.c'; else $(CYGPATH_W) '$(srcdir)/test-pr-poll-loop.c'; fi`

pr_poll_loop_test-pr-poll-loop.o: pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -MT pr_poll_loop_test-pr-poll-loop.o -MD -MP -MF $(DEPDIR)/pr_poll_loop_test-pr-poll-loop.Tpo -c -o pr_poll_loop_test-pr-poll-loop.o `test -f 'pr-poll-loop.c' || echo '$(srcdir)/'`pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/pr_poll_loop_test-pr-poll-loop.Tpo $(DEPDIR)/pr_poll_loop_test-pr-poll-loop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pr-poll-loop.c' object='pr_poll_loop_test-pr-poll-loop.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -c -o pr_poll_loop_test-pr-poll-loop.o `test -f 'pr-poll-loop.c' || echo '$(srcdir)/'`pr-poll-loop.c

pr_poll_loop_test-pr-poll-loop.obj: pr-poll-loop.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -MT pr_poll_loop_test-pr-poll-loop.obj -MD -MP -MF $(DEPDIR)/pr_poll_loop_test-pr-poll-loop.Tpo -c -o pr_poll_loop_test-pr-poll-loop.obj `if test -f 'pr-poll-loop.c'; then $(CYGPATH_W) 'pr-poll-loop.c'; else $(CYGPATH_W) '$(srcdir)/pr-poll-loop.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/pr_poll_loop_test-pr-poll-loop.Tpo $(DEPDIR)/pr_poll_loop_test-pr-poll-loop.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pr-poll-loop.c' object='pr_poll_loop_test-pr-poll-loop.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -c -o pr_poll_loop_test-pr-poll-loop.obj `if test -f 'pr-poll-loop.c'; then $(CYGPATH_W) 'pr-poll-loop.c'; else $(CYGPATH_W) '$(srcdir)/pr-poll-loop.c'; fi`

pr_poll_loop_test-pr-poll-array.o: pr-poll-array.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -MT pr_poll_loop_test-pr-poll-array.o -MD -MP -MF $(DEPDIR)/pr_poll_loop_test-pr-poll-array.Tpo -c -o pr_poll_loop_test-pr-poll-array.o `test -f 'pr-poll-array.c' || echo '$(srcdir)/'`pr-poll-array.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/pr_poll_loop_test-pr-poll-array.Tpo $(DEPDIR)/pr_poll_loop_test-pr-poll-array.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pr-poll-array.c' object='pr_poll_loop_test-pr-poll-array.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -c -o pr_poll_loop_test-pr-poll-array.o `test -f 'pr-poll-array.c' || echo '$(srcdir)/'`pr-poll-array.c

pr_poll_loop_test-pr-poll-array.obj: pr-poll-array.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -MT pr_poll_loop_test-pr-poll-array.obj -MD -MP -MF $(DEPDIR)/pr_poll_loop_test-pr-poll-array.Tpo -c -o pr_poll_loop_test-pr-poll-array.obj `if test -f 'pr-poll-array.c'; then $(CYGPATH_W) 'pr-poll-array.c'; else $(CYGPATH_W) '$(srcdir)/pr-poll-array.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/pr_poll_loop_test-pr-poll-array.Tpo $(DEPDIR)/pr_poll_loop_test-pr-poll-array.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='pr-poll-array.c' object='pr_poll_loop_test-pr-poll-array.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -c -o pr_poll_loop_test-pr-poll-array.obj `if test -f 'pr-poll-array.c'; then $(CYGPATH_W) 'pr-poll-array.c'; else $(CYGPATH_W) '$(srcdir)/pr-poll-array.c'; fi`

pr_poll_loop_test-timer-list.o: timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -MT pr_poll_loop_test-timer-list.o -MD -MP -MF $(DEPDIR)/pr_poll_loop_test-timer-list.Tpo -c -o pr_poll_loop_test-timer-list.o `test -f 'timer-list.c' || echo '$(srcdir)/'`timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/pr_poll_loop_test-timer-list.Tpo $(DEPDIR)/pr_poll_loop_test-timer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='timer-list.c' object='pr_poll_loop_test-timer-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -c -o pr_poll_loop_test-timer-list.o `test -f 'timer-list.c' || echo '$(srcdir)/'`timer-list.c

pr_poll_loop_test-timer-list.obj: timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -MT pr_poll_loop_test-timer-list.obj -MD -MP -MF $(DEPDIR)/pr_poll_loop_test-timer-list.Tpo -c -o pr_poll_loop_test-timer-list.obj `if test -f 'timer-list.c'; then $(CYGPATH_W) 'timer-list.c'; else $(CYGPATH_W) '$(srcdir)/timer-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/pr_poll_loop_test-timer-list.Tpo $(DEPDIR)/pr_poll_loop_test-timer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='timer-list.c' object='pr_poll_loop_test-timer-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(pr_poll_loop_test_CFLAGS) $(CFLAGS) -c -o pr_poll_loop_test-timer-list.obj `if test -f 'timer-list.c'; then $(CYGPATH_W) 'timer-list.c'; else $(CYGPATH_W) '$(srcdir)/timer-list.c'; fi`

qnetd_cluster_list_test-test-qnetd-cluster-list.o: test-qnetd-cluster-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-test-qnetd-cluster-list.o -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-test-qnetd-cluster-list.Tpo -c -o qnetd_cluster_list_test-test-qnetd-cluster-list.o `test -f 'test-qnetd-cluster-list.c' || echo '$(srcdir)/'`test-qnetd-cluster-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-test-qnetd-cluster-list.Tpo $(DEPDIR)/qnetd_cluster_list_test-test-qnetd-cluster-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test-qnetd-cluster-list.c' object='qnetd_cluster_list_test-test-qnetd-cluster-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-test-qnetd-cluster-list.o `test -f 'test-qnetd-cluster-list.c' || echo '$(srcdir)/'`test-qnetd-cluster-list.c

qnetd_cluster_list_test-test-qnetd-cluster-list.obj: test-qnetd-cluster-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-test-qnetd-cluster-list.obj -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-test-qnetd-cluster-list.Tpo -c -o qnetd_cluster_list_test-test-qnetd-cluster-list.obj `if test -f 'test-qnetd-cluster-list.c'; then $(CYGPATH_W) 'test-qnetd-cluster-list.c'; else $(CYGPATH_W) '$(srcdir)/test-qnetd-cluster-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-test-qnetd-cluster-list.Tpo $(DEPDIR)/qnetd_cluster_list_test-test-qnetd-cluster-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test-qnetd-cluster-list.c' object='qnetd_cluster_list_test-test-qnetd-cluster-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-test-qnetd-cluster-list.obj `if test -f 'test-qnetd-cluster-list.c'; then $(CYGPATH_W) 'test-qnetd-cluster-list.c'; else $(CYGPATH_W) '$(srcdir)/test-qnetd-cluster-list.c'; fi`

qnetd_cluster_list_test-qnetd-cluster-list.o: qnetd-cluster-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-qnetd-cluster-list.o -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-qnetd-cluster-list.Tpo -c -o qnetd_cluster_list_test-qnetd-cluster-list.o `test -f 'qnetd-cluster-list.c' || echo '$(srcdir)/'`qnetd-cluster-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-qnetd-cluster-list.Tpo $(DEPDIR)/qnetd_cluster_list_test-qnetd-cluster-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-cluster-list.c' object='qnetd_cluster_list_test-qnetd-cluster-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-qnetd-cluster-list.o `test -f 'qnetd-cluster-list.c' || echo '$(srcdir)/'`qnetd-cluster-list.c

qnetd_cluster_list_test-qnetd-cluster-list.obj: qnetd-cluster-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-qnetd-cluster-list.obj -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-qnetd-cluster-list.Tpo -c -o qnetd_cluster_list_test-qnetd-cluster-list.obj `if test -f 'qnetd-cluster-list.c'; then $(CYGPATH_W) 'qnetd-cluster-list.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-cluster-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-qnetd-cluster-list.Tpo $(DEPDIR)/qnetd_cluster_list_test-qnetd-cluster-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-cluster-list.c' object='qnetd_cluster_list_test-qnetd-cluster-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-qnetd-cluster-list.obj `if test -f 'qnetd-cluster-list.c'; then $(CYGPATH_W) 'qnetd-cluster-list.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-cluster-list.c'; fi`

qnetd_cluster_list_test-qnetd-cluster.o: qnetd-cluster.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-qnetd-cluster.o -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-qnetd-cluster.Tpo -c -o qnetd_cluster_list_test-qnetd-cluster.o `test -f 'qnetd-cluster.c' || echo '$(srcdir)/'`qnetd-cluster.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-qnetd-cluster.Tpo $(DEPDIR)/qnetd_cluster_list_test-qnetd-cluster.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-cluster.c' object='qnetd_cluster_list_test-qnetd-cluster.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-qnetd-cluster.o `test -f 'qnetd-cluster.c' || echo '$(srcdir)/'`qnetd-cluster.c

qnetd_cluster_list_test-qnetd-cluster.obj: qnetd-cluster.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-qnetd-cluster.obj -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-qnetd-cluster.Tpo -c -o qnetd_cluster_list_test-qnetd-cluster.obj `if test -f 'qnetd-cluster.c'; then $(CYGPATH_W) 'qnetd-cluster.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-cluster.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-qnetd-cluster.Tpo $(DEPDIR)/qnetd_cluster_list_test-qnetd-cluster.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-cluster.c' object='qnetd_cluster_list_test-qnetd-cluster.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-qnetd-cluster.obj `if test -f 'qnetd-cluster.c'; then $(CYGPATH_W) 'qnetd-cluster.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-cluster.c'; fi`

qnetd_cluster_list_test-qnetd-client-list.o: qnetd-client-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-qnetd-client-list.o -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-qnetd-client-list.Tpo -c -o qnetd_cluster_list_test-qnetd-client-list.o `test -f 'qnetd-client-list.c' || echo '$(srcdir)/'`qnetd-client-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-qnetd-client-list.Tpo $(DEPDIR)/qnetd_cluster_list_test-qnetd-client-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client-list.c' object='qnetd_cluster_list_test-qnetd-client-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-qnetd-client-list.o `test -f 'qnetd-client-list.c' || echo '$(srcdir)/'`qnetd-client-list.c

qnetd_cluster_list_test-qnetd-client-list.obj: qnetd-client-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-qnetd-client-list.obj -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-qnetd-client-list.Tpo -c -o qnetd_cluster_list_test-qnetd-client-list.obj `if test -f 'qnetd-client-list.c'; then $(CYGPATH_W) 'qnetd-client-list.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-qnetd-client-list.Tpo $(DEPDIR)/qnetd_cluster_list_test-qnetd-client-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client-list.c' object='qnetd_cluster_list_test-qnetd-client-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-qnetd-client-list.obj `if test -f 'qnetd-client-list.c'; then $(CYGPATH_W) 'qnetd-client-list.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client-list.c'; fi`

qnetd_cluster_list_test-qnetd-client.o: qnetd-client.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-qnetd-client.o -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-qnetd-client.Tpo -c -o qnetd_cluster_list_test-qnetd-client.o `test -f 'qnetd-client.c' || echo '$(srcdir)/'`qnetd-client.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-qnetd-client.Tpo $(DEPDIR)/qnetd_cluster_list_test-qnetd-client.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client.c' object='qnetd_cluster_list_test-qnetd-client.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-qnetd-client.o `test -f 'qnetd-client.c' || echo '$(srcdir)/'`qnetd-client.c

qnetd_cluster_list_test-qnetd-client.obj: qnetd-client.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-qnetd-client.obj -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-qnetd-client.Tpo -c -o qnetd_cluster_list_test-qnetd-client.obj `if test -f 'qnetd-client.c'; then $(CYGPATH_W) 'qnetd-client.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-qnetd-client.Tpo $(DEPDIR)/qnetd_cluster_list_test-qnetd-client.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='qnetd-client.c' object='qnetd_cluster_list_test-qnetd-client.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-qnetd-client.obj `if test -f 'qnetd-client.c'; then $(CYGPATH_W) 'qnetd-client.c'; else $(CYGPATH_W) '$(srcdir)/qnetd-client.c'; fi`

qnetd_cluster_list_test-dynar.o: dynar.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-dynar.o -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-dynar.Tpo -c -o qnetd_cluster_list_test-dynar.o `test -f 'dynar.c' || echo '$(srcdir)/'`dynar.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-dynar.Tpo $(DEPDIR)/qnetd_cluster_list_test-dynar.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar.c' object='qnetd_cluster_list_test-dynar.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-dynar.o `test -f 'dynar.c' || echo '$(srcdir)/'`dynar.c

qnetd_cluster_list_test-dynar.obj: dynar.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-dynar.obj -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-dynar.Tpo -c -o qnetd_cluster_list_test-dynar.obj `if test -f 'dynar.c'; then $(CYGPATH_W) 'dynar.c'; else $(CYGPATH_W) '$(srcdir)/dynar.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-dynar.Tpo $(DEPDIR)/qnetd_cluster_list_test-dynar.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='dynar.c' object='qnetd_cluster_list_test-dynar.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-dynar.obj `if test -f 'dynar.c'; then $(CYGPATH_W) 'dynar.c'; else $(CYGPATH_W) '$(srcdir)/dynar.c'; fi`

qnetd_cluster_list_test-node-list.o: node-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-node-list.o -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-node-list.Tpo -c -o qnetd_cluster_list_test-node-list.o `test -f 'node-list.c' || echo '$(srcdir)/'`node-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-node-list.Tpo $(DEPDIR)/qnetd_cluster_list_test-node-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='node-list.c' object='qnetd_cluster_list_test-node-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-node-list.o `test -f 'node-list.c' || echo '$(srcdir)/'`node-list.c

qnetd_cluster_list_test-node-list.obj: node-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-node-list.obj -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-node-list.Tpo -c -o qnetd_cluster_list_test-node-list.obj `if test -f 'node-list.c'; then $(CYGPATH_W) 'node-list.c'; else $(CYGPATH_W) '$(srcdir)/node-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-node-list.Tpo $(DEPDIR)/qnetd_cluster_list_test-node-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='node-list.c' object='qnetd_cluster_list_test-node-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-node-list.obj `if test -f 'node-list.c'; then $(CYGPATH_W) 'node-list.c'; else $(CYGPATH_W) '$(srcdir)/node-list.c'; fi`

qnetd_cluster_list_test-send-buffer-list.o: send-buffer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-send-buffer-list.o -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-send-buffer-list.Tpo -c -o qnetd_cluster_list_test-send-buffer-list.o `test -f 'send-buffer-list.c' || echo '$(srcdir)/'`send-buffer-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-send-buffer-list.Tpo $(DEPDIR)/qnetd_cluster_list_test-send-buffer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='send-buffer-list.c' object='qnetd_cluster_list_test-send-buffer-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-send-buffer-list.o `test -f 'send-buffer-list.c' || echo '$(srcdir)/'`send-buffer-list.c

qnetd_cluster_list_test-send-buffer-list.obj: send-buffer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -MT qnetd_cluster_list_test-send-buffer-list.obj -MD -MP -MF $(DEPDIR)/qnetd_cluster_list_test-send-buffer-list.Tpo -c -o qnetd_cluster_list_test-send-buffer-list.obj `if test -f 'send-buffer-list.c'; then $(CYGPATH_W) 'send-buffer-list.c'; else $(CYGPATH_W) '$(srcdir)/send-buffer-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/qnetd_cluster_list_test-send-buffer-list.Tpo $(DEPDIR)/qnetd_cluster_list_test-send-buffer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='send-buffer-list.c' object='qnetd_cluster_list_test-send-buffer-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qnetd_cluster_list_test_CFLAGS) $(CFLAGS) -c -o qnetd_cluster_list_test-send-buffer-list.obj `if test -f 'send-buffer-list.c'; then $(CYGPATH_W) 'send-buffer-list.c'; else $(CYGPATH_W) '$(srcdir)/send-buffer-list.c'; fi`

timer_list_test-test-timer-list.o: test-timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(timer_list_test_CFLAGS) $(CFLAGS) -MT timer_list_test-test-timer-list.o -MD -MP -MF $(DEPDIR)/timer_list_test-test-timer-list.Tpo -c -o timer_list_test-test-timer-list.o `test -f 'test-timer-list.c' || echo '$(srcdir)/'`test-timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/timer_list_test-test-timer-list.Tpo $(DEPDIR)/timer_list_test-test-timer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test-timer-list.c' object='timer_list_test-test-timer-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(timer_list_test_CFLAGS) $(CFLAGS) -c -o timer_list_test-test-timer-list.o `test -f 'test-timer-list.c' || echo '$(srcdir)/'`test-timer-list.c

timer_list_test-test-timer-list.obj: test-timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(timer_list_test_CFLAGS) $(CFLAGS) -MT timer_list_test-test-timer-list.obj -MD -MP -MF $(DEPDIR)/timer_list_test-test-timer-list.Tpo -c -o timer_list_test-test-timer-list.obj `if test -f 'test-timer-list.c'; then $(CYGPATH_W) 'test-timer-list.c'; else $(CYGPATH_W) '$(srcdir)/test-timer-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/timer_list_test-test-timer-list.Tpo $(DEPDIR)/timer_list_test-test-timer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='test-timer-list.c' object='timer_list_test-test-timer-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(timer_list_test_CFLAGS) $(CFLAGS) -c -o timer_list_test-test-timer-list.obj `if test -f 'test-timer-list.c'; then $(CYGPATH_W) 'test-timer-list.c'; else $(CYGPATH_W) '$(srcdir)/test-timer-list.c'; fi`

timer_list_test-timer-list.o: timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(timer_list_test_CFLAGS) $(CFLAGS) -MT timer_list_test-timer-list.o -MD -MP -MF $(DEPDIR)/timer_list_test-timer-list.Tpo -c -o timer_list_test-timer-list.o `test -f 'timer-list.c' || echo '$(srcdir)/'`timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/timer_list_test-timer-list.Tpo $(DEPDIR)/timer_list_test-timer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='timer-list.c' object='timer_list_test-timer-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(timer_list_test_CFLAGS) $(CFLAGS) -c -o timer_list_test-timer-list.o `test -f 'timer-list.c' || echo '$(srcdir)/'`timer-list.c

timer_list_test-timer-list.obj: timer-list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(timer_list_test_CFLAGS) $(CFLAGS) -MT timer_list_test-timer-list.obj -MD -MP -MF $(DEPDIR)/timer_list_test-timer-list.Tpo -c -o timer_list_test-timer-list.obj `if test -f 'timer-list.c'; then $(CYGPATH_W) 'timer-list.c'; else $(CYGPATH_W) '$(srcdir)/timer-list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/timer_list_test-timer-list.Tpo $(DEPDIR)/timer_list_test-timer-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='timer-list.c' object='timer_list_test-timer-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(timer_list_test_CFLAGS) $(CFLAGS) -c -o timer_list_test-timer-list.obj `if test -f 'timer-list.c'; then $(CYGPATH_W) 'timer-list.c'; else $(CYGPATH_W) '$(srcdir)/timer-list.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(PROGRAMS) $(SCRIPTS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS \
	install-sbinPROGRAMS install-sbinSCRIPTS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-sbinPROGRAMS uninstall-sbinSCRIPTS

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am clean clean-binPROGRAMS \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	clean-sbinPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-binSCRIPTS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-sbinPROGRAMS \
	install-sbinSCRIPTS install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-sbinPROGRAMS uninstall-sbinSCRIPTS


@BUILD_QNETD_TRUE@corosync-qnetd-certutil: corosync-qnetd-certutil.sh
@BUILD_QNETD_TRUE@	sed -e 's#@''DATADIR@#${datadir}#g' \
@BUILD_QNETD_TRUE@	    -e 's#@''BASHPATH@#${BASHPATH}#g' \
@BUILD_QNETD_TRUE@	    -e 's#@''COROSYSCONFDIR@#${COROSYSCONFDIR}#g' \
@BUILD_QNETD_TRUE@	    $< > $@

@BUILD_QDEVICES_TRUE@corosync-qdevice-net-certutil: corosync-qdevice-net-certutil.sh
@BUILD_QDEVICES_TRUE@	sed -e 's#@''DATADIR@#${datadir}#g' \
@BUILD_QDEVICES_TRUE@	    -e 's#@''BASHPATH@#${BASHPATH}#g' \
@BUILD_QDEVICES_TRUE@	    -e 's#@''COROSYSCONFDIR@#${COROSYSCONFDIR}#g' \
@BUILD_QDEVICES_TRUE@	    $< > $@

clean-local:
	rm -rf $(bin_SCRIPTS) $(sbin_SCRIPTS)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
